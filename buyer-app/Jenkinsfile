pipeline {
  agent {
    dockerfile {
      filename 'Dockerfile'
    }
  }
  environment {
    npm_config_cache = 'npm-cache'
    workdir = 'buyer-app/buyer-app'
    package_name = 'buyer-app'
  }
  stages {
    stage('Setup') {
      steps {
        dir('buyer-app/base-app') {
          sh 'npm install'
        }
        dir(workdir) {
          sh 'npm install'
        }
      }
    }
    stage('Build') {
      steps {
        dir(workdir) {
          sh 'npm run build-production'
        }
      }
    }
    stage('Publish') {
      steps {
        dir(workdir) {
          sh '''mkdir artifacts
tar -zcf ../artifacts/${package_name}.tar.gz -C build .
'''
          archiveArtifacts(artifacts: 'artifacts/*.tar.gz', fingerprint: true, onlyIfSuccessful: true)
        }
      }
    }
  }
  post {
    failure {
      slackSend(color: 'danger', message: "Attention: The pipeline ${currentBuild.fullDisplayName} has failed.")

    }

    success {
      slackSend(color: 'good', message: "The pipeline ${currentBuild.fullDisplayName} completed successfully.")

    }

  }
}
