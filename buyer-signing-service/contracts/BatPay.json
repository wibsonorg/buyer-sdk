{
  "contractName": "BatPay",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "fromId",
          "type": "uint32"
        },
        {
          "name": "amount",
          "type": "uint64"
        },
        {
          "name": "fee",
          "type": "uint64"
        },
        {
          "name": "payData",
          "type": "bytes"
        },
        {
          "name": "newCount",
          "type": "uint256"
        },
        {
          "name": "rootHash",
          "type": "bytes32"
        },
        {
          "name": "lockingKeyHash",
          "type": "bytes32"
        },
        {
          "name": "metadata",
          "type": "bytes32"
        }
      ],
      "name": "registerPayment",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "delegate",
          "type": "uint32"
        },
        {
          "name": "slotId",
          "type": "uint32"
        },
        {
          "name": "toAccountId",
          "type": "uint32"
        },
        {
          "name": "maxPayIndex",
          "type": "uint32"
        },
        {
          "name": "declaredAmount",
          "type": "uint64"
        },
        {
          "name": "fee",
          "type": "uint64"
        },
        {
          "name": "destination",
          "type": "address"
        },
        {
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "collect",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAccountsLength",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "bulkRegistrations",
      "outputs": [
        {
          "name": "rootHash",
          "type": "bytes32"
        },
        {
          "name": "recordCount",
          "type": "uint32"
        },
        {
          "name": "smallestRecordId",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "accountId",
          "type": "uint256"
        }
      ],
      "name": "isValidId",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "register",
      "outputs": [
        {
          "name": "ret",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "INSTANT_SLOT",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "name": "accountId",
          "type": "uint256"
        },
        {
          "name": "bulkId",
          "type": "uint256"
        }
      ],
      "name": "claimBulkRegistrationId",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "NEW_ACCOUNT_FLAG",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "payIndex",
          "type": "uint32"
        },
        {
          "name": "unlockerAccountId",
          "type": "uint32"
        },
        {
          "name": "key",
          "type": "bytes"
        }
      ],
      "name": "unlock",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint64"
        },
        {
          "name": "accountId",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "delegate",
          "type": "uint32"
        },
        {
          "name": "slot",
          "type": "uint32"
        },
        {
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "challenge_2",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "delegate",
          "type": "uint32"
        },
        {
          "name": "slot",
          "type": "uint32"
        }
      ],
      "name": "challenge_success",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "accountId",
          "type": "uint256"
        }
      ],
      "name": "isAccountOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint64"
        },
        {
          "name": "accountId",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "delegate",
          "type": "uint32"
        },
        {
          "name": "slot",
          "type": "uint32"
        },
        {
          "name": "payData",
          "type": "bytes"
        }
      ],
      "name": "challenge_4",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint32"
        },
        {
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "collects",
      "outputs": [
        {
          "name": "minPayIndex",
          "type": "uint32"
        },
        {
          "name": "maxPayIndex",
          "type": "uint32"
        },
        {
          "name": "amount",
          "type": "uint64"
        },
        {
          "name": "delegateAmount",
          "type": "uint64"
        },
        {
          "name": "to",
          "type": "uint32"
        },
        {
          "name": "block",
          "type": "uint64"
        },
        {
          "name": "delegate",
          "type": "uint32"
        },
        {
          "name": "challenger",
          "type": "uint32"
        },
        {
          "name": "index",
          "type": "uint32"
        },
        {
          "name": "challengeAmount",
          "type": "uint64"
        },
        {
          "name": "status",
          "type": "uint8"
        },
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "data",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_ACCOUNT_ID",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "payments",
      "outputs": [
        {
          "name": "fromAccountId",
          "type": "uint32"
        },
        {
          "name": "amount",
          "type": "uint64"
        },
        {
          "name": "fee",
          "type": "uint64"
        },
        {
          "name": "smallestAccountId",
          "type": "uint32"
        },
        {
          "name": "greatestAccountId",
          "type": "uint32"
        },
        {
          "name": "totalNumberOfPayees",
          "type": "uint32"
        },
        {
          "name": "lockTimeoutBlockNumber",
          "type": "uint64"
        },
        {
          "name": "paymentDataHash",
          "type": "bytes32"
        },
        {
          "name": "lockingKeyHash",
          "type": "bytes32"
        },
        {
          "name": "metadata",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "delegate",
          "type": "uint32"
        },
        {
          "name": "slot",
          "type": "uint32"
        }
      ],
      "name": "challenge_failed",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "delegate",
          "type": "uint32"
        },
        {
          "name": "slot",
          "type": "uint32"
        },
        {
          "name": "challenger",
          "type": "uint32"
        }
      ],
      "name": "challenge_1",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "accountId",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPaymentsLength",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBulkLength",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "delegate",
          "type": "uint32"
        },
        {
          "name": "slot",
          "type": "uint32"
        }
      ],
      "name": "freeSlot",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "params",
      "outputs": [
        {
          "name": "maxBulk",
          "type": "uint32"
        },
        {
          "name": "maxTransfer",
          "type": "uint32"
        },
        {
          "name": "challengeBlocks",
          "type": "uint32"
        },
        {
          "name": "challengeStepBlocks",
          "type": "uint32"
        },
        {
          "name": "collectStake",
          "type": "uint64"
        },
        {
          "name": "challengeStake",
          "type": "uint64"
        },
        {
          "name": "unlockBlocks",
          "type": "uint32"
        },
        {
          "name": "massExitIdBlocks",
          "type": "uint32"
        },
        {
          "name": "massExitIdStepBlocks",
          "type": "uint32"
        },
        {
          "name": "massExitBalanceBlocks",
          "type": "uint32"
        },
        {
          "name": "massExitBalanceStepBlocks",
          "type": "uint32"
        },
        {
          "name": "massExitStake",
          "type": "uint64"
        },
        {
          "name": "massExitChallengeStake",
          "type": "uint64"
        },
        {
          "name": "maxCollectAmount",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "payIndex",
          "type": "uint32"
        }
      ],
      "name": "refundLockedPayment",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "bulkSize",
          "type": "uint256"
        },
        {
          "name": "rootHash",
          "type": "bytes32"
        }
      ],
      "name": "bulkRegister",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "accounts",
      "outputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "balance",
          "type": "uint64"
        },
        {
          "name": "lastCollectedPaymentId",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "delegate",
          "type": "uint32"
        },
        {
          "name": "slot",
          "type": "uint32"
        },
        {
          "name": "data",
          "type": "bytes"
        },
        {
          "name": "index",
          "type": "uint32"
        }
      ],
      "name": "challenge_3",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "token_",
          "type": "address"
        },
        {
          "name": "maxBulk",
          "type": "uint32"
        },
        {
          "name": "maxTransfer",
          "type": "uint32"
        },
        {
          "name": "challengeBlocks",
          "type": "uint32"
        },
        {
          "name": "challengeStepBlocks",
          "type": "uint32"
        },
        {
          "name": "collectStake",
          "type": "uint64"
        },
        {
          "name": "challengeStake",
          "type": "uint64"
        },
        {
          "name": "unlockBlocks",
          "type": "uint32"
        },
        {
          "name": "maxCollectAmount",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "payIndex",
          "type": "uint32"
        },
        {
          "indexed": true,
          "name": "from",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "totalNumberOfPayees",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PaymentRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "payIndex",
          "type": "uint32"
        },
        {
          "indexed": false,
          "name": "key",
          "type": "bytes"
        }
      ],
      "name": "PaymentUnlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "beneficiaryAccountId",
          "type": "uint32"
        },
        {
          "indexed": false,
          "name": "amountRefunded",
          "type": "uint64"
        }
      ],
      "name": "PaymentRefunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "delegate",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "slot",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "fromPayindex",
          "type": "uint32"
        },
        {
          "indexed": false,
          "name": "toPayIndex",
          "type": "uint32"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Collect",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "delegate",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "slot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "challenger",
          "type": "uint256"
        }
      ],
      "name": "Challenge1",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "delegate",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "slot",
          "type": "uint256"
        }
      ],
      "name": "Challenge2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "delegate",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "slot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "Challenge3",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "delegate",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "slot",
          "type": "uint256"
        }
      ],
      "name": "Challenge4",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "delegate",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "slot",
          "type": "uint256"
        }
      ],
      "name": "ChallengeSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "delegate",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "slot",
          "type": "uint256"
        }
      ],
      "name": "ChallengeFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "bulkSize",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "smallestAccountId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "bulkId",
          "type": "uint256"
        }
      ],
      "name": "BulkRegister",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "accountId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "accountAddress",
          "type": "address"
        }
      ],
      "name": "AccountRegistered",
      "type": "event"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b506040516101208062004d9d83398101604090815281516020830151918301516060840151608085015160a086015160c087015160e088015161010090980151959794959394929391929091600160a060020a0389161515620000d557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f546f6b656e20616464726573732063616e2774206265207a65726f0000000000604482015290519081900360640190fd5b600063ffffffff8916116200014b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f506172616d65746572206d617842756c6b2063616e2774206265207a65726f00604482015290519081900360640190fd5b600063ffffffff881611620001e757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f506172616d65746572206d61785472616e736665722063616e2774206265207a60448201527f65726f0000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600063ffffffff8716116200028357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f506172616d65746572206368616c6c656e6765426c6f636b732063616e27742060448201527f6265207a65726f00000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600063ffffffff8616116200031f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f506172616d65746572206368616c6c656e676553746570426c6f636b7320636160448201527f6e2774206265207a65726f000000000000000000000000000000000000000000606482015290519081900360840190fd5b60006001604060020a03851611620003bd57604080517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f506172616d6574657220636f6c6c6563745374616b652063616e27742062652060448201527f7a65726f00000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60006001604060020a038416116200045c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f506172616d65746572206368616c6c656e67655374616b652063616e2774206260448201527f65207a65726f0000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600063ffffffff831611620004f757604080517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f506172616d6574657220756e6c6f636b426c6f636b732063616e27742062652060448201527f7a65726f00000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60006001604060020a038216116200059657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f506172616d65746572206d6178436f6c6c656374416d6f756e742063616e277460448201527f206265207a65726f000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b6003805433600160a060020a03199182161790915560048054909116600160a060020a039a909a16999099179098556000805463ffffffff1990811663ffffffff998a161767ffffffff000000001916640100000000988a169890980297909717604060020a63ffffffff02191668010000000000000000968916870217606060020a63ffffffff0219166c010000000000000000000000009589169590950294909417608060020a60c060020a0319167001000000000000000000000000000000006001604060020a039485160217600160c060020a03167801000000000000000000000000000000000000000000000000928416929092029190911783556001805490951695169490941790925560028054604060020a608060020a0319169390941602919091179091556146c9908190620006d490396000f30060806040526004361061017c5763ffffffff60e060020a60003504166304be2716811461018157806307034be6146101cf57806314f326a11461026e5780631694e2af146102955780631a96c519146102d25780631aa3a008146102fe5780631aeaa0561461032c5780632fdb56581461034157806337a2b895146103ad578063407256b6146103c2578063433879831461042e5780634629401f14610452578063503e1ac8146104be5780635fced646146104e25780636170c4b1146104fa578063792c8ba81461051e5780637b0f952f1461058a57806380d839b11461064057806387d81789146106555780638da5cb5b146106d95780639096a66b1461070a5780639b4156ff1461072e5780639cc7f70814610758578063b8e0ffbe1461078c578063c4cc55e6146107a1578063c79c9512146107b6578063cff0ab96146107da578063d0aef4a914610926578063d34e3c8314610944578063f2a40db81461095f578063fc0c546a146109ad578063fc6bdb70146109c2575b600080fd5b34801561018d57600080fd5b506101cd6004803563ffffffff1690602480356001604060020a03908116926044359091169160643590810191013560843560a43560c43560e435610a36565b005b3480156101db57600080fd5b50604080516020601f60e4356004818101359283018490048402850184019095528184526101cd9463ffffffff813581169560248035831696604435841696606435909416956001604060020a0360843581169660a43590911695600160a060020a0360c435169536959294610104949193919091019190819084018382808284375094975061114a9650505050505050565b34801561027a57600080fd5b50610283611dd6565b60408051918252519081900360200190f35b3480156102a157600080fd5b506102ad600435611ddd565b6040805193845263ffffffff9283166020850152911682820152519081900360600190f35b3480156102de57600080fd5b506102ea600435611e1a565b604080519115158252519081900360200190f35b34801561030a57600080fd5b50610313611e21565b6040805163ffffffff9092168252519081900360200190f35b34801561033857600080fd5b50610283611f5a565b34801561034d57600080fd5b506040805160206004602480358281013584810280870186019097528086526101cd968435600160a060020a031696369660449591949091019291829185019084908082843750949750508435955050506020909201359150611f609050565b3480156103b957600080fd5b5061028361228d565b3480156103ce57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526102ea94823563ffffffff908116956024803590921695369594606494929301919081908401838280828437509497506122939650505050505050565b34801561043a57600080fd5b506101cd6001604060020a036004351660243561264b565b34801561045e57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101cd94823563ffffffff908116956024803590921695369594606494929301919081908401838280828437509497506128759650505050505050565b3480156104ca57600080fd5b506101cd63ffffffff60043581169060243516612a1a565b3480156104ee57600080fd5b506102ea600435612b43565b34801561050657600080fd5b506101cd6001604060020a0360043516602435612b81565b34801561052a57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101cd94823563ffffffff90811695602480359092169536959460649492930191908190840183828082843750949750612d8e9650505050505050565b34801561059657600080fd5b506105ae63ffffffff60043581169060243516612f37565b6040805163ffffffff9e8f1681529c8e1660208e01526001604060020a039b8c168d820152998b1660608d0152978c1660808c015295891660a08b0152938a1660c08a015291891660e08901529097166101008701529590931661012085015260ff909416610140840152600160a060020a039091166101608301526101808201929092529051908190036101a00190f35b34801561064c57600080fd5b50610283612fdb565b34801561066157600080fd5b5061066d600435612fe3565b6040805163ffffffff9b8c1681526001604060020a039a8b166020820152988a1689820152968a16606089015294891660808801529290971660a086015290941660c084015260e083019490945261010082019290925261012081019290925251908190036101400190f35b3480156106e557600080fd5b506106ee613066565b60408051600160a060020a039092168252519081900360200190f35b34801561071657600080fd5b506101cd63ffffffff60043581169060243516613075565b34801561073a57600080fd5b506101cd63ffffffff600435811690602435811690604435166131b3565b34801561076457600080fd5b50610770600435613364565b604080516001604060020a039092168252519081900360200190f35b34801561079857600080fd5b506102836133e5565b3480156107ad57600080fd5b506102836133eb565b3480156107c257600080fd5b506101cd63ffffffff600435811690602435166133f1565b3480156107e657600080fd5b506107ef6137d8565b604051808f63ffffffff1663ffffffff1681526020018e63ffffffff1663ffffffff1681526020018d63ffffffff1663ffffffff1681526020018c63ffffffff1663ffffffff1681526020018b6001604060020a03166001604060020a031681526020018a6001604060020a03166001604060020a031681526020018963ffffffff1663ffffffff1681526020018863ffffffff1663ffffffff1681526020018763ffffffff1663ffffffff1681526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff168152602001846001604060020a03166001604060020a03168152602001836001604060020a03166001604060020a03168152602001826001604060020a03166001604060020a031681526020019e50505050505050505050505050505060405180910390f35b34801561093257600080fd5b506102ea63ffffffff6004351661385c565b34801561095057600080fd5b506101cd600435602435613cc5565b34801561096b57600080fd5b50610977600435613f6a565b60408051600160a060020a0390941684526001604060020a03909216602084015263ffffffff1682820152519081900360600190f35b3480156109b957600080fd5b506106ee613fb1565b3480156109ce57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101cd94823563ffffffff908116956024803590921695369594606494929301919081908401838280828437509497505050923563ffffffff169350613fc092505050565b610a3e614500565b600754600090602060020a11610a9c576040805160e560020a62461bcd0281526020600482015260186024820152604060020a7743616e6e6f7420616464206d6f7265207061796d656e747302604482015290519081900360640190fd5b610aab8b63ffffffff16612b43565b1515610af5576040805160e560020a62461bcd02815260206004820152600e6024820152609260020a6d125b9d985b1a5908199c9bdb525902604482015290519081900360640190fd5b60006001604060020a038b1611610b4a576040805160e560020a62461bcd02815260206004820152600e6024820152609260020a6d125b9d985b1a5908185b5bdd5b9d02604482015290519081900360640190fd5b851580610b575750600085115b1515610ba4576040805160e560020a62461bcd0281526020600482015260116024820152607b60020a70092dcecc2d8d2c840e4dedee840d0c2e6d02604482015290519081900360640190fd5b6001604060020a0389161580610bba5750600084115b1515610c07576040805160e560020a62461bcd0281526020600482015260116024820152607b60020a70092dcecc2d8d2c840d8dec6d640d0c2e6d02604482015290519081900360640190fd5b60405160e260020a632b2bf0c702815260206004820190815260248201899052610caa9173__Challenge_____________________________9163acafc31c918c918c9181906044018484808284378201915050935050505060206040518083038186803b158015610c7857600080fd5b505af4158015610c8c573d6000803e3d6000fd5b505050506040513d6020811015610ca257600080fd5b50518761420d565b63ffffffff1660a08301819052600010610d2e576040805160e560020a62461bcd02815260206004820152603460248201527f496e76616c6964206e756d626572206f66207061796565732c2073686f756c646044820152606060020a73206174206c65617374206265203120706179656502606482015290519081900360840190fd5b60005460a083015163ffffffff602060020a9092048216911610610dc2576040805160e560020a62461bcd02815260206004820152603a60248201527f546f6f206d616e79207061796565732c2069742073686f756c64206265206c6560448201527f7373207468616e20636f6e666967206d61785472616e73666572000000000000606482015290519081900360840190fd5b63ffffffff808c1683526001604060020a03808c1660208501528a166040840152610100830185905261012083018490526005541660608301819052610e08908761420d565b63ffffffff9081166080840152600154610e249143911661423b565b6001604060020a031660c083015260405188908890602001808383808284378201915050925050506040516020818303038152906040526040518082805190602001908083835b60208310610e8a5780518252601f199092019160209182019101610e6b565b5181516020939093036101000a6000190180199091169216919091179052604051920182900390912060e086015250505060a0820151610eda906001604060020a038c169063ffffffff1661425b565b9050610ef8816001604060020a03168a6001604060020a031661423b565b9050610f0a8b63ffffffff1682614299565b6000861115610f1d57610f1d8686613cc5565b6007805460018082018355600083905284517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688600590930292830180546020880151604089015160608a015160808b015160a08c015163ffffffff1990951663ffffffff978816908117602060020a606060020a031916602060020a6001604060020a039687160217606060020a60a060020a031916606060020a948616949094029390931760a060020a63ffffffff02191660a060020a928816929092029190911760c060020a63ffffffff02191660c060020a9187169190910217600160e060020a031660e060020a95909316949094029190911790915560c08701517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c689850180546001604060020a0319169190921617905560e08601517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a8401556101008601517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b8401556101208601517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68c90930192909255915490916110e191906143c7565b63ffffffff167f9f98d377b08a9797d0d5ce3ca2410fcdec2a8ef5bc87584ed433e3b7370a71868460a001518560200151604051808363ffffffff168152602001826001604060020a031681526020019250505060405180910390a35050505050505050505050565b611152614554565b60008060008060006111698e63ffffffff16612b43565b15156111b5576040805160e560020a62461bcd0281526020600482015260106024820152608060020a6f696e76616c69642064656c656761746502604482015290519081900360640190fd5b6111c48c63ffffffff16611e1a565b151561122c576040805160e560020a62461bcd02815260206004820152602660248201527f746f4163636f756e744964206d75737420626520612076616c6964206163636f604482015260d260020a651d5b9d081a5902606482015290519081900360840190fd5b6112368e8e6133f1565b6005805463ffffffff8e1690811061124a57fe5b6000918252602091829020604080516060810182529290910154600160a060020a03811680845260a060020a82046001604060020a03169484019490945260e060020a900463ffffffff169082015296501515611305576040805160e560020a62461bcd02815260206004820152602860248201527f6163636f756e7420726567697374726174696f6e2068617320746f2062652063604482015260c260020a671bdb5c1b195d195902606482015290519081900360840190fd5b63ffffffff8e8116908d16146115c057308e8d88604001518e8e8e8e6040516020018089600160a060020a0316600160a060020a0316606060020a0281526014018863ffffffff1663ffffffff1660e060020a0281526004018763ffffffff1663ffffffff1660e060020a0281526004018663ffffffff1663ffffffff1660e060020a0281526004018563ffffffff1663ffffffff1660e060020a028152600401846001604060020a03166001604060020a031660c060020a028152600801836001604060020a03166001604060020a031660c060020a02815260080182600160a060020a0316600160a060020a0316606060020a028152601401985050505050505050506040516020818303038152906040526040518082805190602001908083835b602083106114485780518252601f199092019160209182019101611429565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208c5160e160020a63052b477f02845260048401828152602485019687528f5160448601528f51929d50600160a060020a03909116975073__Challenge_____________________________9650630a568efe958d95508f94919390926064909201919085019080838360005b838110156114f35781810151838201526020016114db565b50505050905090810190601f1680156115205780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561153e57600080fd5b505af4158015611552573d6000803e3d6000fd5b505050506040513d602081101561156857600080fd5b5051600160a060020a0316146115c0576040805160e560020a62461bcd0281526020600482015260126024820152607060020a714261642075736572207369676e617475726502604482015290519081900360640190fd5b60008b63ffffffff161180156115de575060075463ffffffff8c1611155b1515611652576040805160e560020a62461bcd02815260206004820152603260248201527f696e76616c6964206d6178506179496e6465782c207061796d656e74732069736044820152607260020a71081b9bdd081d1a185d081b1bdb99c81e595d02606482015290519081900360840190fd5b856040015163ffffffff168b63ffffffff161115156116db576040805160e560020a62461bcd02815260206004820152603460248201527f6163636f756e7420616c726561647920636f6c6c6563746564207061796d656e6044820152606360020a730e8e640eae040e8de40dac2f0a0c2f292dcc8caf02606482015290519081900360840190fd5b43600760018d0363ffffffff168154811015156116f457fe5b60009182526020909120600160059092020101546001604060020a03161061177e576040805160e560020a62461bcd02815260206004820152602c60248201527f63616e6e6f7420636f6c6c656374207061796d656e747320746861742063616e604482015260a260020a6b081899481d5b9b1bd8dad95902606482015290519081900360840190fd5b6002546001604060020a03604060020a9091048116908b1611156117eb576040805160e560020a62461bcd0281526020600482015260196024820152603860020a786465636c61726564416d6f756e7420697320746f6f2062696702604482015290519081900360640190fd5b6001604060020a03808b16908a161115611870576040805160e560020a62461bcd02815260206004820152603560248201527f66656520697320746f6f206269672c2073686f756c6420626520736d616c6c656044820152605a60020a741c881d1a185b88191958db185c9959105b5bdd5b9d02606482015290519081900360840190fd5b600860008f63ffffffff1663ffffffff16815260200190815260200160002060008e63ffffffff1663ffffffff16815260200190815260200160002093508d8460010160086101000a81548163ffffffff021916908363ffffffff16021790555085604001518460000160006101000a81548163ffffffff021916908363ffffffff1602179055508a8460000160046101000a81548163ffffffff021916908363ffffffff160217905550898460000160086101000a8154816001604060020a0302191690836001604060020a031602179055508b8460000160186101000a81548163ffffffff021916908363ffffffff16021790555073__Challenge_____________________________639e749fe66000800160089054906101000a900463ffffffff166040518263ffffffff1660e060020a028152600401808263ffffffff16815260200191505060206040518083038186803b1580156119d357600080fd5b505af41580156119e7573d6000803e3d6000fd5b505050506040513d60208110156119fd57600080fd5b505160018501805460e060020a6001604060020a03199091166001604060020a039384161760e060020a60ff021916179055600054608060020a900416925061800063ffffffff8e1610611aca57611a678a6001604060020a03168a6001604060020a03166143eb565b84546001604060020a03808d16608060020a02608060020a60c060020a0319909216919091178655909250611aa19084811690841661423b565b600285018054600160a060020a03191690559250611ac563ffffffff8d168361440f565b611b0a565b8354608060020a60c060020a031916608060020a6001604060020a038b1602178455600284018054600160a060020a031916600160a060020a038a161790555b826001604060020a031660058f63ffffffff16815481101515611b2957fe5b60009182526020909120015460a060020a90046001604060020a03161015611b91576040805160e560020a62461bcd0281526020600482015260106024820152608060020a6f6e6f7420656e6f7567682066756e647302604482015290519081900360640190fd5b8a60058d63ffffffff16815481101515611ba757fe5b60009182526020909120018054600160e060020a031660e060020a63ffffffff93841602179055611bda908f1684614299565b600160a060020a03881615801590611bfa57506180008d63ffffffff1610155b15611d45576005805463ffffffff8e16908110611c1357fe5b60009182526020822001546005805460a060020a9092046001604060020a031693509063ffffffff8f16908110611c4657fe5b6000918252602080832091909101805460a060020a60e060020a03191660a060020a6001604060020a0395861602179055600480546040805160e060020a63a9059cbb028152600160a060020a038f81169482019490945295871660248701525191169363a9059cbb9360448083019493928390030190829087803b158015611cce57600080fd5b505af1158015611ce2573d6000803e3d6000fd5b505050506040513d6020811015611cf857600080fd5b50511515611d45576040805160e560020a62461bcd02815260206004820152600f6024820152608a60020a6e1d1c985b9cd9995c8819985a5b195902604482015290519081900360640190fd5b8b63ffffffff168d63ffffffff168f63ffffffff167fa2b0cc03a0e0e2936fc273d9d92fda3c4be892b13b8407c35bdbdf8051d1c7c989604001518f8f604051808463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff168152602001826001604060020a03168152602001935050505060405180910390a45050505050505050505050505050565b6005545b90565b6006805482908110611deb57fe5b60009182526020909120600290910201805460019091015490915063ffffffff80821691602060020a90041683565b6005541190565b60055460009063ffffffff11611e7c576040805160e560020a62461bcd0281526020600482015260156024820152605a60020a741b9bc81b5bdc99481858d8dbdd5b9d1cc81b19599d02604482015290519081900360640190fd5b50600580546040805160608101825233808252600060208084018281528486018381526001880189559790925292517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db08601805492519751600160a060020a0319909316600160a060020a039092169190911760a060020a60e060020a03191660a060020a6001604060020a039098169790970296909617600160e060020a031660e060020a63ffffffff928316021790955582519484168552908401528051919260008051602061467e833981519152929081900390910190a190565b61800081565b6006546000908190819081908510611fc2576040805160e560020a62461bcd02815260206004820181905260248201527f7468652062756c6b4964207265666572656e63656420697320696e76616c6964604482015290519081900360640190fd5b6006805486908110611fd057fe5b906000526020600020906002020160010160049054906101000a900463ffffffff1663ffffffff16935060068581548110151561200957fe5b60009182526020909120600160029092020101546006805463ffffffff9092169450908690811061203657fe5b906000526020600020906002020160000154915073__Merkle________________________________639484be848861206f89886144d9565b60405160e060020a63ffffffff851602815260248101829052600160a060020a038d1660448201819052606060048301908152845160648401528451919290918291608401906020878101910280838360005b838110156120da5781810151838201526020016120c2565b5050505090500194505050505060206040518083038186803b1580156120ff57600080fd5b505af4158015612113573d6000803e3d6000fd5b505050506040513d602081101561212957600080fd5b5051905083861080159061213e575082840186105b15156121c8576040805160e560020a62461bcd02815260206004820152604260248201527f746865206163636f756e74496420737065636966696564206973206e6f74207060448201527f617274206f6620746861742062756c6b20726567697374726174696f6e20736c606482015260f260020a611bdd02608482015290519081900360a40190fd5b808214612219576040805160e560020a62461bcd0281526020600482015260146024820152606160020a7334b73b30b634b21026b2b935b63290383937b7b302604482015290519081900360640190fd5b60408051878152600160a060020a038a166020820152815160008051602061467e833981519152929181900390910190a18760058781548110151561225a57fe5b60009182526020909120018054600160a060020a031916600160a060020a03929092169190911790555050505050505050565b60001981565b600754600090819063ffffffff861610612300576040805160e560020a62461bcd02815260206004820152602f602482015260008051602061463e8339815191526044820152608a60020a6e1d081d1a185d081b1bdb99c81e595d02606482015290519081900360840190fd5b61230f8463ffffffff16611e1a565b1515612364576040805160e560020a62461bcd0281526020600482015260196024820152603a60020a78125b9d985b1a59081d5b9b1bd8dad95c9058d8dbdd5b9d125902604482015290519081900360640190fd5b6007805463ffffffff871690811061237857fe5b60009182526020909120600160059092020101546001604060020a031643106123e2576040805160e560020a62461bcd0281526020600482015260116024820152607a60020a7012185cda081b1bd8dac8195e1c1a5c995902604482015290519081900360640190fd5b8383604051602001808363ffffffff1663ffffffff1660e060020a02815260040182805190602001908083835b6020831061242e5780518252601f19909201916020918201910161240f565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040526040518082805190602001908083835b602083106124925780518252601f199092019160209182019101612473565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020905060078563ffffffff168154811015156124d657fe5b60009182526020909120600360059092020101548114612531576040805160e560020a62461bcd02815260206004820152600b602482015260a860020a6a496e76616c6964206b657902604482015290519081900360640190fd5b600780546000919063ffffffff881690811061254957fe5b6000918252602090912060036005909202010155600780546125a09163ffffffff8088169290891690811061257a57fe5b6000918252602090912060059091020154606060020a90046001604060020a031661440f565b8463ffffffff167fc1da99648f403f1933d32a1bf6c07daff7e4c64b5285f8c4810df171e6b05ea2846040518080602001828103825283818151815260200191508051906020019080838360005b838110156126065781810151838201526020016125ee565b50505050905090810190601f1680156126335780820380516001836020036101000a031916815260200191505b509250505060405180910390a2506001949350505050565b60008161265781612b43565b15156126b0576040805160e560020a62461bcd028152602060048201526029602482015260008051602061465e833981519152604482015260ba60020a681a5cc81b595d1a1bd902606482015290519081900360840190fd5b60058054849081106126be57fe5b6000918252602090912001546001604060020a0360a060020a90910481169250841682101561272f576040805160e560020a62461bcd0281526020600482015260126024820152607060020a71696e73756666696369656e742066756e647302604482015290519081900360640190fd5b60006001604060020a0385161161278e576040805160e560020a62461bcd0281526020600482015260186024820152604060020a77616d6f756e742073686f756c64206265206e6f6e7a65726f02604482015290519081900360640190fd5b6127988385614299565b600480546040805160e060020a63a9059cbb02815233938101939093526001604060020a038716602484015251600160a060020a039091169163a9059cbb9160448083019260209291908290030181600087803b1580156127f857600080fd5b505af115801561280c573d6000803e3d6000fd5b505050506040513d602081101561282257600080fd5b5051151561286f576040805160e560020a62461bcd02815260206004820152600f6024820152608a60020a6e1d1c985b9cd9995c8819985a5b195902604482015290519081900360640190fd5b50505050565b8263ffffffff1661288581612b43565b15156128de576040805160e560020a62461bcd028152602060048201526029602482015260008051602061465e833981519152604482015260ba60020a681a5cc81b595d1a1bd902606482015290519081900360840190fd5b63ffffffff80851660009081526008602090815260408083209387168352928152828220925160e060020a632d66d661028152600481018481526024820184905260606044830190815287516064840152875173__Challenge_____________________________96632d66d66196909590948a949392608490910191850190808383895b8381101561297b578181015183820152602001612963565b50505050905090810190601f1680156129a85780820380516001836020036101000a031916815260200191505b5094505050505060006040518083038186803b1580156129c757600080fd5b505af41580156129db573d6000803e3d6000fd5b505060405163ffffffff8087169350871691507fd7515a6b2c1e8e3f982e96f1b4c105f0f4607f9c6c64648f706221397b60a55090600090a350505050565b8163ffffffff16612a2a81611e1a565b1515612a6e576040805160e560020a62461bcd028152602060048201526016602482015260008051602061461e833981519152604482015290519081900360640190fd5b63ffffffff80841660009081526008602090815260408083209386168352929052818120825160e160020a63405ef27b02815260048101919091526024810182905260056044820152915173__Challenge_____________________________926380bde4f6926064808301939192829003018186803b158015612af157600080fd5b505af4158015612b05573d6000803e3d6000fd5b505060405163ffffffff8086169350861691507fed5d5a09a0c360ae8f4d4743e83680240a51985240cc41649dc27ec426eb73a290600090a3505050565b6000612b4e82611e1a565b8015612b7b57506005805483908110612b6357fe5b600091825260209091200154600160a060020a031633145b92915050565b600554600090821080612b95575060001982145b1515612be2576040805160e560020a62461bcd0281526020600482015260116024820152607a60020a701a5b9d985b1a59081858d8dbdd5b9d125902604482015290519081900360640190fd5b60006001604060020a03841611612c42576040805160e560020a62461bcd0281526020600482015260196024820152603860020a78616d6f756e742073686f756c6420626520706f73697469766502604482015290519081900360640190fd5b600019821415612ca257612c54611e21565b63ffffffff16905082600582815481101515612c6c57fe5b9060005260206000200160000160146101000a8154816001604060020a0302191690836001604060020a03160217905550612cac565b612cac828461440f565b600480546040805160e060020a6323b872dd02815233938101939093523060248401526001604060020a038616604484015251600160a060020a03909116916323b872dd9160648083019260209291908290030181600087803b158015612d1257600080fd5b505af1158015612d26573d6000803e3d6000fd5b505050506040513d6020811015612d3c57600080fd5b50511515612d89576040805160e560020a62461bcd02815260206004820152600f6024820152608a60020a6e1d1c985b9cd9995c8819985a5b195902604482015290519081900360640190fd5b505050565b8263ffffffff16612d9e81612b43565b1515612df7576040805160e560020a62461bcd028152602060048201526029602482015260008051602061465e833981519152604482015260ba60020a681a5cc81b595d1a1bd902606482015290519081900360840190fd5b63ffffffff80851660009081526008602090815260408083209387168352928152828220925160e460020a63024c7f2f0281526004810184815260076024830181905260606044840190815288516064850152885173__Challenge_____________________________976324c7f2f097909693958b9594608490910192908601918190849084905b83811015612e98578181015183820152602001612e80565b50505050905090810190601f168015612ec55780820380516001836020036101000a031916815260200191505b5094505050505060006040518083038186803b158015612ee457600080fd5b505af4158015612ef8573d6000803e3d6000fd5b505060405163ffffffff8087169350871691507f51be4ad99306a29aaff226c9916d87e4c09a270644cf52e226f801625372960290600090a350505050565b6008602090815260009283526040808420909152908252902080546001820154600283015460039093015463ffffffff80841694602060020a8504821694604060020a8082046001604060020a0390811696608060020a80850483169760c060020a90950487169683831696948304811695606060020a84048216959284049091169360a060020a8404169260e060020a900460ff1691600160a060020a0316908d565b63ffffffff81565b6007805482908110612ff157fe5b60009182526020909120600590910201805460018201546002830154600384015460049094015463ffffffff80851696506001604060020a03602060020a8604811696606060020a870482169660a060020a810484169660c060020a820485169660e060020a9092049094169493909216928a565b600354600160a060020a031681565b8163ffffffff1661308581612b43565b15156130de576040805160e560020a62461bcd028152602060048201526029602482015260008051602061465e833981519152604482015260ba60020a681a5cc81b595d1a1bd902606482015290519081900360840190fd5b63ffffffff80841660009081526008602090815260408083209386168352929052818120825160e060020a63377dac0302815260048101919091526024810182905260056044820152915173__Challenge_____________________________9263377dac03926064808301939192829003018186803b15801561316157600080fd5b505af4158015613175573d6000803e3d6000fd5b505060405163ffffffff8086169350861691507f764cffa99ad24d0b737f04ad6e947e0c5237da11528bbc95a60d5f753168bce590600090a3505050565b8263ffffffff166131c381611e1a565b1515613207576040805160e560020a62461bcd028152602060048201526016602482015260008051602061461e833981519152604482015290519081900360640190fd5b8163ffffffff1661321781612b43565b1515613270576040805160e560020a62461bcd028152602060048201526029602482015260008051602061465e833981519152604482015260ba60020a681a5cc81b595d1a1bd902606482015290519081900360840190fd5b63ffffffff80861660009081526008602090815260408083208885168452909152808220815160e360020a6318cde0750281526004810191909152602481018390526005604482015292861660648401525173__Challenge_____________________________9263c66f03a8926084808301939192829003018186803b1580156132fa57600080fd5b505af415801561330e573d6000803e3d6000fd5b505050508363ffffffff168563ffffffff167f7ead680ada8d9e1356fc4bcb157550954c7cdc74cf4298d66426ae9f785d68ed85604051808263ffffffff16815260200191505060405180910390a35050505050565b60008161337081611e1a565b15156133b4576040805160e560020a62461bcd028152602060048201526016602482015260008051602061461e833981519152604482015290519081900360640190fd5b60058054849081106133c257fe5b60009182526020909120015460a060020a90046001604060020a03169392505050565b60075490565b60065490565b6133f9614574565b5063ffffffff80831660009081526008602090815260408083208585168452825280832081516101a08101835281548087168252602060020a81048716948201949094526001604060020a03604060020a808604821694830194909452608060020a8086048216606084015260c060020a90950487166080830152600183015480821660a0840152938404871660c0830152606060020a8404871660e083015293830490951661010086015260a060020a820490921661012085015260ff60e060020a9091041661014084018190526002820154600160a060020a031661016085015260039091015461018084015215156134f35761286f565b81610140015160ff16600114151561354d576040805160e560020a62461bcd0281526020600482015260126024820152607060020a71736c6f74206e6f7420617661696c61626c6502604482015290519081900360640190fd5b60a08201516001604060020a03164310156135aa576040805160e560020a62461bcd0281526020600482015260126024820152607060020a71736c6f74206e6f7420617661696c61626c6502604482015290519081900360640190fd5b63ffffffff80851660008181526008602090815260408083209488168352939052918220600101805460e060020a60ff02191690556060840151915461360d92613608916001604060020a0391821691608060020a9091041661423b565b61440f565b61363182604001516001604060020a031683606001516001604060020a03166143eb565b610160830151909150600160a060020a0316156137c45761368f816001604060020a03166005846080015163ffffffff1681548110151561366e57fe5b60009182526020909120015460a060020a90046001604060020a031661423b565b905060006005836080015163ffffffff168154811015156136ac57fe5b6000918252602090912001805460a060020a60e060020a03191660a060020a6001604060020a03938416021790558116156137bf57600480546101608401516040805160e060020a63a9059cbb028152600160a060020a03928316948101949094526001604060020a03851660248501525191169163a9059cbb9160448083019260209291908290030181600087803b15801561374857600080fd5b505af115801561375c573d6000803e3d6000fd5b505050506040513d602081101561377257600080fd5b505115156137bf576040805160e560020a62461bcd02815260206004820152600f6024820152608a60020a6e1d1c985b9cd9995c8819985a5b195902604482015290519081900360640190fd5b61286f565b61286f826080015163ffffffff168261440f565b60005460015460025463ffffffff80841693602060020a808204831694604060020a808404851695606060020a8086048716966001604060020a03608060020a80890482169860c060020a9004821697878416979081048416968082048516969582048516959282049094169360a060020a9091048316928281169291909104168e565b6000613866614500565b60075460009063ffffffff8516106138d1576040805160e560020a62461bcd02815260206004820152602f602482015260008051602061463e8339815191526044820152608a60020a6e1d081d1a185d081b1bdb99c81e595d02606482015290519081900360840190fd5b6007805463ffffffff86169081106138e557fe5b6000918252602090912060036005909202010154151561394f576040805160e560020a62461bcd02815260206004820152601b60248201527f7061796d656e7420697320616c726561647920756e6c6f636b65640000000000604482015290519081900360640190fd5b6007805463ffffffff861690811061396357fe5b60009182526020909120600160059092020101546001604060020a03164310156139d7576040805160e560020a62461bcd02815260206004820152601d60248201527f48617368206c6f636b20686173206e6f74206578706972656420796574000000604482015290519081900360640190fd5b6007805463ffffffff86169081106139eb57fe5b6000918252602080832060408051610140810182526005909402909101805463ffffffff80821686526001604060020a03602060020a8304811695870195909552606060020a820485169386019390935260a060020a81048316606086015260c060020a81048316608086015260e060020a900490911660a08401819052600182015490921660c0840152600281015460e084015260038101546101008401526004015461012083015290935011613aeb576040805160e560020a62461bcd0281526020600482015260186024820152604260020a771c185e5b595b9d08185b1c9958591e481c99599d5b99195902604482015290519081900360640190fd5b613b2b613b0f8360a0015163ffffffff1684602001516001604060020a031661425b565b6001604060020a031683604001516001604060020a031661423b565b600060a0840181905260408401819052602084015260078054919250839163ffffffff8716908110613b5957fe5b600091825260209182902083516005929092020180549284015160408501516060860151608087015160a088015163ffffffff1990971663ffffffff96871617602060020a606060020a031916602060020a6001604060020a039586160217606060020a60a060020a031916606060020a938516939093029290921760a060020a63ffffffff02191660a060020a918616919091021760c060020a63ffffffff02191660c060020a9185169190910217600160e060020a031660e060020a9484169490940293909317815560c08401516001820180546001604060020a031916919094161790925560e083015160028301556101008301516003830155610120909201516004909101558251613c7091168261440f565b81516040805163ffffffff90921682526001604060020a038316602083015280517f5237d1300784adfc279ef3a96834ad6ca9e7b7ac63239501fc5bacafa7afe1559281900390910190a15060019392505050565b60008211613d1a576040805160e560020a62461bcd0281526020600482015260176024820152604860020a7642756c6b2073697a652063616e2774206265207a65726f02604482015290519081900360640190fd5b60005463ffffffff168210613d96576040805160e560020a62461bcd02815260206004820152603160248201527f43616e6e6f742072656769737465722074686973206e756d626572206f6620696044820152607860020a7064732073696d756c74616e656f75736c7902606482015290519081900360840190fd5b60055463ffffffff90613da990846144ee565b1115613dff576040805160e560020a62461bcd02815260206004820152601f60248201527f43616e6e6f742072656769737465723a2072616e206f7574206f662069647300604482015290519081900360640190fd5b60008111613e54576040805160e560020a62461bcd0281526020600482015260176024820152604860020a76526f6f7420686173682063616e2774206265207a65726f02604482015290519081900360640190fd5b60055460065460408051858152602081019390935282810191909152517f9862cc43f4a88dac2960cf68db647bbdd971785677f61f57da13545b1172805a9181900360600190a16040805160608101825282815263ffffffff848116602083019081526005805483169484019485526006805460018101825560009190915293517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f60029095029485015590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d409093018054945163ffffffff199095169383169390931767ffffffff000000001916602060020a949092169390930217905554613f5f90836144ee565b612d896005826145e0565b6005805482908110613f7857fe5b600091825260209091200154600160a060020a038116915060a060020a81046001604060020a03169060e060020a900463ffffffff1683565b600454600160a060020a031681565b8363ffffffff16613fd081611e1a565b1515614014576040805160e560020a62461bcd028152602060048201526016602482015260008051602061461e833981519152604482015290519081900360640190fd5b63ffffffff8086166000908152600860209081526040808320888516845290915290206001015461404d91606060020a90910416612b43565b15156140b2576040805160e560020a62461bcd028152602060048201526024808201527f6f6e6c79206368616c6c656e6765722063616e2063616c6c206368616c6c656e604482015260e160020a6333b2af9902606482015290519081900360840190fd5b63ffffffff808616600090815260086020908152604080832088851684528252808320905160e260020a63054c32490281526004810182815260248201859052948716606482015260806044820190815288516084830152885173__Challenge_____________________________96631530c9249694958b948b94929360a4909101918601908083838a5b8381101561415657818101518382015260200161413e565b50505050905090810190601f1680156141835780820380516001836020036101000a031916815260200191505b509550505050505060006040518083038186803b1580156141a357600080fd5b505af41580156141b7573d6000803e3d6000fd5b505050508363ffffffff168563ffffffff167fdd04d7f039f1aa4cbadd486eb11d0ea9077188ed866b0f1607956feebd3b36a984604051808263ffffffff16815260200191505060405180910390a35050505050565b60008282018381108015906142255750602060020a81105b151561423057600080fd5b8091505b5092915050565b60008282018381108015906142255750604060020a811061423057600080fd5b60008083151561426e5760009150614234565b5082820282848281151561427e57fe5b041461428957600080fd5b604060020a811061423057600080fd5b6000826142a581611e1a565b15156142e9576040805160e560020a62461bcd028152602060048201526016602482015260008051602061461e833981519152604482015290519081900360640190fd5b60058054859081106142f757fe5b6000918252602090912001546001604060020a0360a060020a909104811692508316821015614366576040805160e560020a62461bcd0281526020600482015260106024820152608060020a6f6e6f7420656e6f7567682066756e647302604482015290519081900360640190fd5b614382826001604060020a0316846001604060020a03166143eb565b600580548690811061439057fe5b9060005260206000200160000160146101000a8154816001604060020a0302191690836001604060020a0316021790555050505050565b600080838311156143d757600080fd5b50818303602060020a811061423057600080fd5b600080838311156143fb57600080fd5b50818303604060020a811061423057600080fd5b8161441981611e1a565b151561445d576040805160e560020a62461bcd028152602060048201526016602482015260008051602061461e833981519152604482015290519081900360640190fd5b61449560058481548110151561446f57fe5b6000918252602090912001546001604060020a0360a060020a909104811690841661423b565b60058054859081106144a357fe5b9060005260206000200160000160146101000a8154816001604060020a0302191690836001604060020a03160217905550505050565b6000828211156144e857600080fd5b50900390565b60008282018381101561423057600080fd5b6040805161014081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b604080516060810182526000808252602082018190529181019190915290565b604080516101a081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081019190915290565b815481835581811115612d8957600083815260209020612d89918101908301611dda91905b808211156146195760008155600101614605565b509056006163636f756e744964206973206e6f742076616c696400000000000000000000696e76616c696420706179496e6465782c207061796d656e7473206973206e6f4f6e6c79206163636f756e74206f776e65722063616e20696e766f6b65207468de338ca976df8cb181c40c0c8d8ed2a5634cc3893a9b41c2b9b550649531889ca165627a7a72305820e79b535920218ac0a4fa80e57493ea2f4f9f9cc5036282c64b175045f2ecbd210029",
  "deployedBytecode": "0x60806040526004361061017c5763ffffffff60e060020a60003504166304be2716811461018157806307034be6146101cf57806314f326a11461026e5780631694e2af146102955780631a96c519146102d25780631aa3a008146102fe5780631aeaa0561461032c5780632fdb56581461034157806337a2b895146103ad578063407256b6146103c2578063433879831461042e5780634629401f14610452578063503e1ac8146104be5780635fced646146104e25780636170c4b1146104fa578063792c8ba81461051e5780637b0f952f1461058a57806380d839b11461064057806387d81789146106555780638da5cb5b146106d95780639096a66b1461070a5780639b4156ff1461072e5780639cc7f70814610758578063b8e0ffbe1461078c578063c4cc55e6146107a1578063c79c9512146107b6578063cff0ab96146107da578063d0aef4a914610926578063d34e3c8314610944578063f2a40db81461095f578063fc0c546a146109ad578063fc6bdb70146109c2575b600080fd5b34801561018d57600080fd5b506101cd6004803563ffffffff1690602480356001604060020a03908116926044359091169160643590810191013560843560a43560c43560e435610a36565b005b3480156101db57600080fd5b50604080516020601f60e4356004818101359283018490048402850184019095528184526101cd9463ffffffff813581169560248035831696604435841696606435909416956001604060020a0360843581169660a43590911695600160a060020a0360c435169536959294610104949193919091019190819084018382808284375094975061114a9650505050505050565b34801561027a57600080fd5b50610283611dd6565b60408051918252519081900360200190f35b3480156102a157600080fd5b506102ad600435611ddd565b6040805193845263ffffffff9283166020850152911682820152519081900360600190f35b3480156102de57600080fd5b506102ea600435611e1a565b604080519115158252519081900360200190f35b34801561030a57600080fd5b50610313611e21565b6040805163ffffffff9092168252519081900360200190f35b34801561033857600080fd5b50610283611f5a565b34801561034d57600080fd5b506040805160206004602480358281013584810280870186019097528086526101cd968435600160a060020a031696369660449591949091019291829185019084908082843750949750508435955050506020909201359150611f609050565b3480156103b957600080fd5b5061028361228d565b3480156103ce57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526102ea94823563ffffffff908116956024803590921695369594606494929301919081908401838280828437509497506122939650505050505050565b34801561043a57600080fd5b506101cd6001604060020a036004351660243561264b565b34801561045e57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101cd94823563ffffffff908116956024803590921695369594606494929301919081908401838280828437509497506128759650505050505050565b3480156104ca57600080fd5b506101cd63ffffffff60043581169060243516612a1a565b3480156104ee57600080fd5b506102ea600435612b43565b34801561050657600080fd5b506101cd6001604060020a0360043516602435612b81565b34801561052a57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101cd94823563ffffffff90811695602480359092169536959460649492930191908190840183828082843750949750612d8e9650505050505050565b34801561059657600080fd5b506105ae63ffffffff60043581169060243516612f37565b6040805163ffffffff9e8f1681529c8e1660208e01526001604060020a039b8c168d820152998b1660608d0152978c1660808c015295891660a08b0152938a1660c08a015291891660e08901529097166101008701529590931661012085015260ff909416610140840152600160a060020a039091166101608301526101808201929092529051908190036101a00190f35b34801561064c57600080fd5b50610283612fdb565b34801561066157600080fd5b5061066d600435612fe3565b6040805163ffffffff9b8c1681526001604060020a039a8b166020820152988a1689820152968a16606089015294891660808801529290971660a086015290941660c084015260e083019490945261010082019290925261012081019290925251908190036101400190f35b3480156106e557600080fd5b506106ee613066565b60408051600160a060020a039092168252519081900360200190f35b34801561071657600080fd5b506101cd63ffffffff60043581169060243516613075565b34801561073a57600080fd5b506101cd63ffffffff600435811690602435811690604435166131b3565b34801561076457600080fd5b50610770600435613364565b604080516001604060020a039092168252519081900360200190f35b34801561079857600080fd5b506102836133e5565b3480156107ad57600080fd5b506102836133eb565b3480156107c257600080fd5b506101cd63ffffffff600435811690602435166133f1565b3480156107e657600080fd5b506107ef6137d8565b604051808f63ffffffff1663ffffffff1681526020018e63ffffffff1663ffffffff1681526020018d63ffffffff1663ffffffff1681526020018c63ffffffff1663ffffffff1681526020018b6001604060020a03166001604060020a031681526020018a6001604060020a03166001604060020a031681526020018963ffffffff1663ffffffff1681526020018863ffffffff1663ffffffff1681526020018763ffffffff1663ffffffff1681526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff168152602001846001604060020a03166001604060020a03168152602001836001604060020a03166001604060020a03168152602001826001604060020a03166001604060020a031681526020019e50505050505050505050505050505060405180910390f35b34801561093257600080fd5b506102ea63ffffffff6004351661385c565b34801561095057600080fd5b506101cd600435602435613cc5565b34801561096b57600080fd5b50610977600435613f6a565b60408051600160a060020a0390941684526001604060020a03909216602084015263ffffffff1682820152519081900360600190f35b3480156109b957600080fd5b506106ee613fb1565b3480156109ce57600080fd5b50604080516020600460443581810135601f81018490048402850184019095528484526101cd94823563ffffffff908116956024803590921695369594606494929301919081908401838280828437509497505050923563ffffffff169350613fc092505050565b610a3e614500565b600754600090602060020a11610a9c576040805160e560020a62461bcd0281526020600482015260186024820152604060020a7743616e6e6f7420616464206d6f7265207061796d656e747302604482015290519081900360640190fd5b610aab8b63ffffffff16612b43565b1515610af5576040805160e560020a62461bcd02815260206004820152600e6024820152609260020a6d125b9d985b1a5908199c9bdb525902604482015290519081900360640190fd5b60006001604060020a038b1611610b4a576040805160e560020a62461bcd02815260206004820152600e6024820152609260020a6d125b9d985b1a5908185b5bdd5b9d02604482015290519081900360640190fd5b851580610b575750600085115b1515610ba4576040805160e560020a62461bcd0281526020600482015260116024820152607b60020a70092dcecc2d8d2c840e4dedee840d0c2e6d02604482015290519081900360640190fd5b6001604060020a0389161580610bba5750600084115b1515610c07576040805160e560020a62461bcd0281526020600482015260116024820152607b60020a70092dcecc2d8d2c840d8dec6d640d0c2e6d02604482015290519081900360640190fd5b60405160e260020a632b2bf0c702815260206004820190815260248201899052610caa9173__Challenge_____________________________9163acafc31c918c918c9181906044018484808284378201915050935050505060206040518083038186803b158015610c7857600080fd5b505af4158015610c8c573d6000803e3d6000fd5b505050506040513d6020811015610ca257600080fd5b50518761420d565b63ffffffff1660a08301819052600010610d2e576040805160e560020a62461bcd02815260206004820152603460248201527f496e76616c6964206e756d626572206f66207061796565732c2073686f756c646044820152606060020a73206174206c65617374206265203120706179656502606482015290519081900360840190fd5b60005460a083015163ffffffff602060020a9092048216911610610dc2576040805160e560020a62461bcd02815260206004820152603a60248201527f546f6f206d616e79207061796565732c2069742073686f756c64206265206c6560448201527f7373207468616e20636f6e666967206d61785472616e73666572000000000000606482015290519081900360840190fd5b63ffffffff808c1683526001604060020a03808c1660208501528a166040840152610100830185905261012083018490526005541660608301819052610e08908761420d565b63ffffffff9081166080840152600154610e249143911661423b565b6001604060020a031660c083015260405188908890602001808383808284378201915050925050506040516020818303038152906040526040518082805190602001908083835b60208310610e8a5780518252601f199092019160209182019101610e6b565b5181516020939093036101000a6000190180199091169216919091179052604051920182900390912060e086015250505060a0820151610eda906001604060020a038c169063ffffffff1661425b565b9050610ef8816001604060020a03168a6001604060020a031661423b565b9050610f0a8b63ffffffff1682614299565b6000861115610f1d57610f1d8686613cc5565b6007805460018082018355600083905284517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688600590930292830180546020880151604089015160608a015160808b015160a08c015163ffffffff1990951663ffffffff978816908117602060020a606060020a031916602060020a6001604060020a039687160217606060020a60a060020a031916606060020a948616949094029390931760a060020a63ffffffff02191660a060020a928816929092029190911760c060020a63ffffffff02191660c060020a9187169190910217600160e060020a031660e060020a95909316949094029190911790915560c08701517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c689850180546001604060020a0319169190921617905560e08601517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a8401556101008601517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b8401556101208601517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68c90930192909255915490916110e191906143c7565b63ffffffff167f9f98d377b08a9797d0d5ce3ca2410fcdec2a8ef5bc87584ed433e3b7370a71868460a001518560200151604051808363ffffffff168152602001826001604060020a031681526020019250505060405180910390a35050505050505050505050565b611152614554565b60008060008060006111698e63ffffffff16612b43565b15156111b5576040805160e560020a62461bcd0281526020600482015260106024820152608060020a6f696e76616c69642064656c656761746502604482015290519081900360640190fd5b6111c48c63ffffffff16611e1a565b151561122c576040805160e560020a62461bcd02815260206004820152602660248201527f746f4163636f756e744964206d75737420626520612076616c6964206163636f604482015260d260020a651d5b9d081a5902606482015290519081900360840190fd5b6112368e8e6133f1565b6005805463ffffffff8e1690811061124a57fe5b6000918252602091829020604080516060810182529290910154600160a060020a03811680845260a060020a82046001604060020a03169484019490945260e060020a900463ffffffff169082015296501515611305576040805160e560020a62461bcd02815260206004820152602860248201527f6163636f756e7420726567697374726174696f6e2068617320746f2062652063604482015260c260020a671bdb5c1b195d195902606482015290519081900360840190fd5b63ffffffff8e8116908d16146115c057308e8d88604001518e8e8e8e6040516020018089600160a060020a0316600160a060020a0316606060020a0281526014018863ffffffff1663ffffffff1660e060020a0281526004018763ffffffff1663ffffffff1660e060020a0281526004018663ffffffff1663ffffffff1660e060020a0281526004018563ffffffff1663ffffffff1660e060020a028152600401846001604060020a03166001604060020a031660c060020a028152600801836001604060020a03166001604060020a031660c060020a02815260080182600160a060020a0316600160a060020a0316606060020a028152601401985050505050505050506040516020818303038152906040526040518082805190602001908083835b602083106114485780518252601f199092019160209182019101611429565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208c5160e160020a63052b477f02845260048401828152602485019687528f5160448601528f51929d50600160a060020a03909116975073__Challenge_____________________________9650630a568efe958d95508f94919390926064909201919085019080838360005b838110156114f35781810151838201526020016114db565b50505050905090810190601f1680156115205780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561153e57600080fd5b505af4158015611552573d6000803e3d6000fd5b505050506040513d602081101561156857600080fd5b5051600160a060020a0316146115c0576040805160e560020a62461bcd0281526020600482015260126024820152607060020a714261642075736572207369676e617475726502604482015290519081900360640190fd5b60008b63ffffffff161180156115de575060075463ffffffff8c1611155b1515611652576040805160e560020a62461bcd02815260206004820152603260248201527f696e76616c6964206d6178506179496e6465782c207061796d656e74732069736044820152607260020a71081b9bdd081d1a185d081b1bdb99c81e595d02606482015290519081900360840190fd5b856040015163ffffffff168b63ffffffff161115156116db576040805160e560020a62461bcd02815260206004820152603460248201527f6163636f756e7420616c726561647920636f6c6c6563746564207061796d656e6044820152606360020a730e8e640eae040e8de40dac2f0a0c2f292dcc8caf02606482015290519081900360840190fd5b43600760018d0363ffffffff168154811015156116f457fe5b60009182526020909120600160059092020101546001604060020a03161061177e576040805160e560020a62461bcd02815260206004820152602c60248201527f63616e6e6f7420636f6c6c656374207061796d656e747320746861742063616e604482015260a260020a6b081899481d5b9b1bd8dad95902606482015290519081900360840190fd5b6002546001604060020a03604060020a9091048116908b1611156117eb576040805160e560020a62461bcd0281526020600482015260196024820152603860020a786465636c61726564416d6f756e7420697320746f6f2062696702604482015290519081900360640190fd5b6001604060020a03808b16908a161115611870576040805160e560020a62461bcd02815260206004820152603560248201527f66656520697320746f6f206269672c2073686f756c6420626520736d616c6c656044820152605a60020a741c881d1a185b88191958db185c9959105b5bdd5b9d02606482015290519081900360840190fd5b600860008f63ffffffff1663ffffffff16815260200190815260200160002060008e63ffffffff1663ffffffff16815260200190815260200160002093508d8460010160086101000a81548163ffffffff021916908363ffffffff16021790555085604001518460000160006101000a81548163ffffffff021916908363ffffffff1602179055508a8460000160046101000a81548163ffffffff021916908363ffffffff160217905550898460000160086101000a8154816001604060020a0302191690836001604060020a031602179055508b8460000160186101000a81548163ffffffff021916908363ffffffff16021790555073__Challenge_____________________________639e749fe66000800160089054906101000a900463ffffffff166040518263ffffffff1660e060020a028152600401808263ffffffff16815260200191505060206040518083038186803b1580156119d357600080fd5b505af41580156119e7573d6000803e3d6000fd5b505050506040513d60208110156119fd57600080fd5b505160018501805460e060020a6001604060020a03199091166001604060020a039384161760e060020a60ff021916179055600054608060020a900416925061800063ffffffff8e1610611aca57611a678a6001604060020a03168a6001604060020a03166143eb565b84546001604060020a03808d16608060020a02608060020a60c060020a0319909216919091178655909250611aa19084811690841661423b565b600285018054600160a060020a03191690559250611ac563ffffffff8d168361440f565b611b0a565b8354608060020a60c060020a031916608060020a6001604060020a038b1602178455600284018054600160a060020a031916600160a060020a038a161790555b826001604060020a031660058f63ffffffff16815481101515611b2957fe5b60009182526020909120015460a060020a90046001604060020a03161015611b91576040805160e560020a62461bcd0281526020600482015260106024820152608060020a6f6e6f7420656e6f7567682066756e647302604482015290519081900360640190fd5b8a60058d63ffffffff16815481101515611ba757fe5b60009182526020909120018054600160e060020a031660e060020a63ffffffff93841602179055611bda908f1684614299565b600160a060020a03881615801590611bfa57506180008d63ffffffff1610155b15611d45576005805463ffffffff8e16908110611c1357fe5b60009182526020822001546005805460a060020a9092046001604060020a031693509063ffffffff8f16908110611c4657fe5b6000918252602080832091909101805460a060020a60e060020a03191660a060020a6001604060020a0395861602179055600480546040805160e060020a63a9059cbb028152600160a060020a038f81169482019490945295871660248701525191169363a9059cbb9360448083019493928390030190829087803b158015611cce57600080fd5b505af1158015611ce2573d6000803e3d6000fd5b505050506040513d6020811015611cf857600080fd5b50511515611d45576040805160e560020a62461bcd02815260206004820152600f6024820152608a60020a6e1d1c985b9cd9995c8819985a5b195902604482015290519081900360640190fd5b8b63ffffffff168d63ffffffff168f63ffffffff167fa2b0cc03a0e0e2936fc273d9d92fda3c4be892b13b8407c35bdbdf8051d1c7c989604001518f8f604051808463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff168152602001826001604060020a03168152602001935050505060405180910390a45050505050505050505050505050565b6005545b90565b6006805482908110611deb57fe5b60009182526020909120600290910201805460019091015490915063ffffffff80821691602060020a90041683565b6005541190565b60055460009063ffffffff11611e7c576040805160e560020a62461bcd0281526020600482015260156024820152605a60020a741b9bc81b5bdc99481858d8dbdd5b9d1cc81b19599d02604482015290519081900360640190fd5b50600580546040805160608101825233808252600060208084018281528486018381526001880189559790925292517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db08601805492519751600160a060020a0319909316600160a060020a039092169190911760a060020a60e060020a03191660a060020a6001604060020a039098169790970296909617600160e060020a031660e060020a63ffffffff928316021790955582519484168552908401528051919260008051602061467e833981519152929081900390910190a190565b61800081565b6006546000908190819081908510611fc2576040805160e560020a62461bcd02815260206004820181905260248201527f7468652062756c6b4964207265666572656e63656420697320696e76616c6964604482015290519081900360640190fd5b6006805486908110611fd057fe5b906000526020600020906002020160010160049054906101000a900463ffffffff1663ffffffff16935060068581548110151561200957fe5b60009182526020909120600160029092020101546006805463ffffffff9092169450908690811061203657fe5b906000526020600020906002020160000154915073__Merkle________________________________639484be848861206f89886144d9565b60405160e060020a63ffffffff851602815260248101829052600160a060020a038d1660448201819052606060048301908152845160648401528451919290918291608401906020878101910280838360005b838110156120da5781810151838201526020016120c2565b5050505090500194505050505060206040518083038186803b1580156120ff57600080fd5b505af4158015612113573d6000803e3d6000fd5b505050506040513d602081101561212957600080fd5b5051905083861080159061213e575082840186105b15156121c8576040805160e560020a62461bcd02815260206004820152604260248201527f746865206163636f756e74496420737065636966696564206973206e6f74207060448201527f617274206f6620746861742062756c6b20726567697374726174696f6e20736c606482015260f260020a611bdd02608482015290519081900360a40190fd5b808214612219576040805160e560020a62461bcd0281526020600482015260146024820152606160020a7334b73b30b634b21026b2b935b63290383937b7b302604482015290519081900360640190fd5b60408051878152600160a060020a038a166020820152815160008051602061467e833981519152929181900390910190a18760058781548110151561225a57fe5b60009182526020909120018054600160a060020a031916600160a060020a03929092169190911790555050505050505050565b60001981565b600754600090819063ffffffff861610612300576040805160e560020a62461bcd02815260206004820152602f602482015260008051602061463e8339815191526044820152608a60020a6e1d081d1a185d081b1bdb99c81e595d02606482015290519081900360840190fd5b61230f8463ffffffff16611e1a565b1515612364576040805160e560020a62461bcd0281526020600482015260196024820152603a60020a78125b9d985b1a59081d5b9b1bd8dad95c9058d8dbdd5b9d125902604482015290519081900360640190fd5b6007805463ffffffff871690811061237857fe5b60009182526020909120600160059092020101546001604060020a031643106123e2576040805160e560020a62461bcd0281526020600482015260116024820152607a60020a7012185cda081b1bd8dac8195e1c1a5c995902604482015290519081900360640190fd5b8383604051602001808363ffffffff1663ffffffff1660e060020a02815260040182805190602001908083835b6020831061242e5780518252601f19909201916020918201910161240f565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040526040518082805190602001908083835b602083106124925780518252601f199092019160209182019101612473565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020905060078563ffffffff168154811015156124d657fe5b60009182526020909120600360059092020101548114612531576040805160e560020a62461bcd02815260206004820152600b602482015260a860020a6a496e76616c6964206b657902604482015290519081900360640190fd5b600780546000919063ffffffff881690811061254957fe5b6000918252602090912060036005909202010155600780546125a09163ffffffff8088169290891690811061257a57fe5b6000918252602090912060059091020154606060020a90046001604060020a031661440f565b8463ffffffff167fc1da99648f403f1933d32a1bf6c07daff7e4c64b5285f8c4810df171e6b05ea2846040518080602001828103825283818151815260200191508051906020019080838360005b838110156126065781810151838201526020016125ee565b50505050905090810190601f1680156126335780820380516001836020036101000a031916815260200191505b509250505060405180910390a2506001949350505050565b60008161265781612b43565b15156126b0576040805160e560020a62461bcd028152602060048201526029602482015260008051602061465e833981519152604482015260ba60020a681a5cc81b595d1a1bd902606482015290519081900360840190fd5b60058054849081106126be57fe5b6000918252602090912001546001604060020a0360a060020a90910481169250841682101561272f576040805160e560020a62461bcd0281526020600482015260126024820152607060020a71696e73756666696369656e742066756e647302604482015290519081900360640190fd5b60006001604060020a0385161161278e576040805160e560020a62461bcd0281526020600482015260186024820152604060020a77616d6f756e742073686f756c64206265206e6f6e7a65726f02604482015290519081900360640190fd5b6127988385614299565b600480546040805160e060020a63a9059cbb02815233938101939093526001604060020a038716602484015251600160a060020a039091169163a9059cbb9160448083019260209291908290030181600087803b1580156127f857600080fd5b505af115801561280c573d6000803e3d6000fd5b505050506040513d602081101561282257600080fd5b5051151561286f576040805160e560020a62461bcd02815260206004820152600f6024820152608a60020a6e1d1c985b9cd9995c8819985a5b195902604482015290519081900360640190fd5b50505050565b8263ffffffff1661288581612b43565b15156128de576040805160e560020a62461bcd028152602060048201526029602482015260008051602061465e833981519152604482015260ba60020a681a5cc81b595d1a1bd902606482015290519081900360840190fd5b63ffffffff80851660009081526008602090815260408083209387168352928152828220925160e060020a632d66d661028152600481018481526024820184905260606044830190815287516064840152875173__Challenge_____________________________96632d66d66196909590948a949392608490910191850190808383895b8381101561297b578181015183820152602001612963565b50505050905090810190601f1680156129a85780820380516001836020036101000a031916815260200191505b5094505050505060006040518083038186803b1580156129c757600080fd5b505af41580156129db573d6000803e3d6000fd5b505060405163ffffffff8087169350871691507fd7515a6b2c1e8e3f982e96f1b4c105f0f4607f9c6c64648f706221397b60a55090600090a350505050565b8163ffffffff16612a2a81611e1a565b1515612a6e576040805160e560020a62461bcd028152602060048201526016602482015260008051602061461e833981519152604482015290519081900360640190fd5b63ffffffff80841660009081526008602090815260408083209386168352929052818120825160e160020a63405ef27b02815260048101919091526024810182905260056044820152915173__Challenge_____________________________926380bde4f6926064808301939192829003018186803b158015612af157600080fd5b505af4158015612b05573d6000803e3d6000fd5b505060405163ffffffff8086169350861691507fed5d5a09a0c360ae8f4d4743e83680240a51985240cc41649dc27ec426eb73a290600090a3505050565b6000612b4e82611e1a565b8015612b7b57506005805483908110612b6357fe5b600091825260209091200154600160a060020a031633145b92915050565b600554600090821080612b95575060001982145b1515612be2576040805160e560020a62461bcd0281526020600482015260116024820152607a60020a701a5b9d985b1a59081858d8dbdd5b9d125902604482015290519081900360640190fd5b60006001604060020a03841611612c42576040805160e560020a62461bcd0281526020600482015260196024820152603860020a78616d6f756e742073686f756c6420626520706f73697469766502604482015290519081900360640190fd5b600019821415612ca257612c54611e21565b63ffffffff16905082600582815481101515612c6c57fe5b9060005260206000200160000160146101000a8154816001604060020a0302191690836001604060020a03160217905550612cac565b612cac828461440f565b600480546040805160e060020a6323b872dd02815233938101939093523060248401526001604060020a038616604484015251600160a060020a03909116916323b872dd9160648083019260209291908290030181600087803b158015612d1257600080fd5b505af1158015612d26573d6000803e3d6000fd5b505050506040513d6020811015612d3c57600080fd5b50511515612d89576040805160e560020a62461bcd02815260206004820152600f6024820152608a60020a6e1d1c985b9cd9995c8819985a5b195902604482015290519081900360640190fd5b505050565b8263ffffffff16612d9e81612b43565b1515612df7576040805160e560020a62461bcd028152602060048201526029602482015260008051602061465e833981519152604482015260ba60020a681a5cc81b595d1a1bd902606482015290519081900360840190fd5b63ffffffff80851660009081526008602090815260408083209387168352928152828220925160e460020a63024c7f2f0281526004810184815260076024830181905260606044840190815288516064850152885173__Challenge_____________________________976324c7f2f097909693958b9594608490910192908601918190849084905b83811015612e98578181015183820152602001612e80565b50505050905090810190601f168015612ec55780820380516001836020036101000a031916815260200191505b5094505050505060006040518083038186803b158015612ee457600080fd5b505af4158015612ef8573d6000803e3d6000fd5b505060405163ffffffff8087169350871691507f51be4ad99306a29aaff226c9916d87e4c09a270644cf52e226f801625372960290600090a350505050565b6008602090815260009283526040808420909152908252902080546001820154600283015460039093015463ffffffff80841694602060020a8504821694604060020a8082046001604060020a0390811696608060020a80850483169760c060020a90950487169683831696948304811695606060020a84048216959284049091169360a060020a8404169260e060020a900460ff1691600160a060020a0316908d565b63ffffffff81565b6007805482908110612ff157fe5b60009182526020909120600590910201805460018201546002830154600384015460049094015463ffffffff80851696506001604060020a03602060020a8604811696606060020a870482169660a060020a810484169660c060020a820485169660e060020a9092049094169493909216928a565b600354600160a060020a031681565b8163ffffffff1661308581612b43565b15156130de576040805160e560020a62461bcd028152602060048201526029602482015260008051602061465e833981519152604482015260ba60020a681a5cc81b595d1a1bd902606482015290519081900360840190fd5b63ffffffff80841660009081526008602090815260408083209386168352929052818120825160e060020a63377dac0302815260048101919091526024810182905260056044820152915173__Challenge_____________________________9263377dac03926064808301939192829003018186803b15801561316157600080fd5b505af4158015613175573d6000803e3d6000fd5b505060405163ffffffff8086169350861691507f764cffa99ad24d0b737f04ad6e947e0c5237da11528bbc95a60d5f753168bce590600090a3505050565b8263ffffffff166131c381611e1a565b1515613207576040805160e560020a62461bcd028152602060048201526016602482015260008051602061461e833981519152604482015290519081900360640190fd5b8163ffffffff1661321781612b43565b1515613270576040805160e560020a62461bcd028152602060048201526029602482015260008051602061465e833981519152604482015260ba60020a681a5cc81b595d1a1bd902606482015290519081900360840190fd5b63ffffffff80861660009081526008602090815260408083208885168452909152808220815160e360020a6318cde0750281526004810191909152602481018390526005604482015292861660648401525173__Challenge_____________________________9263c66f03a8926084808301939192829003018186803b1580156132fa57600080fd5b505af415801561330e573d6000803e3d6000fd5b505050508363ffffffff168563ffffffff167f7ead680ada8d9e1356fc4bcb157550954c7cdc74cf4298d66426ae9f785d68ed85604051808263ffffffff16815260200191505060405180910390a35050505050565b60008161337081611e1a565b15156133b4576040805160e560020a62461bcd028152602060048201526016602482015260008051602061461e833981519152604482015290519081900360640190fd5b60058054849081106133c257fe5b60009182526020909120015460a060020a90046001604060020a03169392505050565b60075490565b60065490565b6133f9614574565b5063ffffffff80831660009081526008602090815260408083208585168452825280832081516101a08101835281548087168252602060020a81048716948201949094526001604060020a03604060020a808604821694830194909452608060020a8086048216606084015260c060020a90950487166080830152600183015480821660a0840152938404871660c0830152606060020a8404871660e083015293830490951661010086015260a060020a820490921661012085015260ff60e060020a9091041661014084018190526002820154600160a060020a031661016085015260039091015461018084015215156134f35761286f565b81610140015160ff16600114151561354d576040805160e560020a62461bcd0281526020600482015260126024820152607060020a71736c6f74206e6f7420617661696c61626c6502604482015290519081900360640190fd5b60a08201516001604060020a03164310156135aa576040805160e560020a62461bcd0281526020600482015260126024820152607060020a71736c6f74206e6f7420617661696c61626c6502604482015290519081900360640190fd5b63ffffffff80851660008181526008602090815260408083209488168352939052918220600101805460e060020a60ff02191690556060840151915461360d92613608916001604060020a0391821691608060020a9091041661423b565b61440f565b61363182604001516001604060020a031683606001516001604060020a03166143eb565b610160830151909150600160a060020a0316156137c45761368f816001604060020a03166005846080015163ffffffff1681548110151561366e57fe5b60009182526020909120015460a060020a90046001604060020a031661423b565b905060006005836080015163ffffffff168154811015156136ac57fe5b6000918252602090912001805460a060020a60e060020a03191660a060020a6001604060020a03938416021790558116156137bf57600480546101608401516040805160e060020a63a9059cbb028152600160a060020a03928316948101949094526001604060020a03851660248501525191169163a9059cbb9160448083019260209291908290030181600087803b15801561374857600080fd5b505af115801561375c573d6000803e3d6000fd5b505050506040513d602081101561377257600080fd5b505115156137bf576040805160e560020a62461bcd02815260206004820152600f6024820152608a60020a6e1d1c985b9cd9995c8819985a5b195902604482015290519081900360640190fd5b61286f565b61286f826080015163ffffffff168261440f565b60005460015460025463ffffffff80841693602060020a808204831694604060020a808404851695606060020a8086048716966001604060020a03608060020a80890482169860c060020a9004821697878416979081048416968082048516969582048516959282049094169360a060020a9091048316928281169291909104168e565b6000613866614500565b60075460009063ffffffff8516106138d1576040805160e560020a62461bcd02815260206004820152602f602482015260008051602061463e8339815191526044820152608a60020a6e1d081d1a185d081b1bdb99c81e595d02606482015290519081900360840190fd5b6007805463ffffffff86169081106138e557fe5b6000918252602090912060036005909202010154151561394f576040805160e560020a62461bcd02815260206004820152601b60248201527f7061796d656e7420697320616c726561647920756e6c6f636b65640000000000604482015290519081900360640190fd5b6007805463ffffffff861690811061396357fe5b60009182526020909120600160059092020101546001604060020a03164310156139d7576040805160e560020a62461bcd02815260206004820152601d60248201527f48617368206c6f636b20686173206e6f74206578706972656420796574000000604482015290519081900360640190fd5b6007805463ffffffff86169081106139eb57fe5b6000918252602080832060408051610140810182526005909402909101805463ffffffff80821686526001604060020a03602060020a8304811695870195909552606060020a820485169386019390935260a060020a81048316606086015260c060020a81048316608086015260e060020a900490911660a08401819052600182015490921660c0840152600281015460e084015260038101546101008401526004015461012083015290935011613aeb576040805160e560020a62461bcd0281526020600482015260186024820152604260020a771c185e5b595b9d08185b1c9958591e481c99599d5b99195902604482015290519081900360640190fd5b613b2b613b0f8360a0015163ffffffff1684602001516001604060020a031661425b565b6001604060020a031683604001516001604060020a031661423b565b600060a0840181905260408401819052602084015260078054919250839163ffffffff8716908110613b5957fe5b600091825260209182902083516005929092020180549284015160408501516060860151608087015160a088015163ffffffff1990971663ffffffff96871617602060020a606060020a031916602060020a6001604060020a039586160217606060020a60a060020a031916606060020a938516939093029290921760a060020a63ffffffff02191660a060020a918616919091021760c060020a63ffffffff02191660c060020a9185169190910217600160e060020a031660e060020a9484169490940293909317815560c08401516001820180546001604060020a031916919094161790925560e083015160028301556101008301516003830155610120909201516004909101558251613c7091168261440f565b81516040805163ffffffff90921682526001604060020a038316602083015280517f5237d1300784adfc279ef3a96834ad6ca9e7b7ac63239501fc5bacafa7afe1559281900390910190a15060019392505050565b60008211613d1a576040805160e560020a62461bcd0281526020600482015260176024820152604860020a7642756c6b2073697a652063616e2774206265207a65726f02604482015290519081900360640190fd5b60005463ffffffff168210613d96576040805160e560020a62461bcd02815260206004820152603160248201527f43616e6e6f742072656769737465722074686973206e756d626572206f6620696044820152607860020a7064732073696d756c74616e656f75736c7902606482015290519081900360840190fd5b60055463ffffffff90613da990846144ee565b1115613dff576040805160e560020a62461bcd02815260206004820152601f60248201527f43616e6e6f742072656769737465723a2072616e206f7574206f662069647300604482015290519081900360640190fd5b60008111613e54576040805160e560020a62461bcd0281526020600482015260176024820152604860020a76526f6f7420686173682063616e2774206265207a65726f02604482015290519081900360640190fd5b60055460065460408051858152602081019390935282810191909152517f9862cc43f4a88dac2960cf68db647bbdd971785677f61f57da13545b1172805a9181900360600190a16040805160608101825282815263ffffffff848116602083019081526005805483169484019485526006805460018101825560009190915293517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f60029095029485015590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d409093018054945163ffffffff199095169383169390931767ffffffff000000001916602060020a949092169390930217905554613f5f90836144ee565b612d896005826145e0565b6005805482908110613f7857fe5b600091825260209091200154600160a060020a038116915060a060020a81046001604060020a03169060e060020a900463ffffffff1683565b600454600160a060020a031681565b8363ffffffff16613fd081611e1a565b1515614014576040805160e560020a62461bcd028152602060048201526016602482015260008051602061461e833981519152604482015290519081900360640190fd5b63ffffffff8086166000908152600860209081526040808320888516845290915290206001015461404d91606060020a90910416612b43565b15156140b2576040805160e560020a62461bcd028152602060048201526024808201527f6f6e6c79206368616c6c656e6765722063616e2063616c6c206368616c6c656e604482015260e160020a6333b2af9902606482015290519081900360840190fd5b63ffffffff808616600090815260086020908152604080832088851684528252808320905160e260020a63054c32490281526004810182815260248201859052948716606482015260806044820190815288516084830152885173__Challenge_____________________________96631530c9249694958b948b94929360a4909101918601908083838a5b8381101561415657818101518382015260200161413e565b50505050905090810190601f1680156141835780820380516001836020036101000a031916815260200191505b509550505050505060006040518083038186803b1580156141a357600080fd5b505af41580156141b7573d6000803e3d6000fd5b505050508363ffffffff168563ffffffff167fdd04d7f039f1aa4cbadd486eb11d0ea9077188ed866b0f1607956feebd3b36a984604051808263ffffffff16815260200191505060405180910390a35050505050565b60008282018381108015906142255750602060020a81105b151561423057600080fd5b8091505b5092915050565b60008282018381108015906142255750604060020a811061423057600080fd5b60008083151561426e5760009150614234565b5082820282848281151561427e57fe5b041461428957600080fd5b604060020a811061423057600080fd5b6000826142a581611e1a565b15156142e9576040805160e560020a62461bcd028152602060048201526016602482015260008051602061461e833981519152604482015290519081900360640190fd5b60058054859081106142f757fe5b6000918252602090912001546001604060020a0360a060020a909104811692508316821015614366576040805160e560020a62461bcd0281526020600482015260106024820152608060020a6f6e6f7420656e6f7567682066756e647302604482015290519081900360640190fd5b614382826001604060020a0316846001604060020a03166143eb565b600580548690811061439057fe5b9060005260206000200160000160146101000a8154816001604060020a0302191690836001604060020a0316021790555050505050565b600080838311156143d757600080fd5b50818303602060020a811061423057600080fd5b600080838311156143fb57600080fd5b50818303604060020a811061423057600080fd5b8161441981611e1a565b151561445d576040805160e560020a62461bcd028152602060048201526016602482015260008051602061461e833981519152604482015290519081900360640190fd5b61449560058481548110151561446f57fe5b6000918252602090912001546001604060020a0360a060020a909104811690841661423b565b60058054859081106144a357fe5b9060005260206000200160000160146101000a8154816001604060020a0302191690836001604060020a03160217905550505050565b6000828211156144e857600080fd5b50900390565b60008282018381101561423057600080fd5b6040805161014081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b604080516060810182526000808252602082018190529181019190915290565b604080516101a081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081019190915290565b815481835581811115612d8957600083815260209020612d89918101908301611dda91905b808211156146195760008155600101614605565b509056006163636f756e744964206973206e6f742076616c696400000000000000000000696e76616c696420706179496e6465782c207061796d656e7473206973206e6f4f6e6c79206163636f756e74206f776e65722063616e20696e766f6b65207468de338ca976df8cb181c40c0c8d8ed2a5634cc3893a9b41c2b9b550649531889ca165627a7a72305820e79b535920218ac0a4fa80e57493ea2f4f9f9cc5036282c64b175045f2ecbd210029",
  "sourceMap": "310:2340:1:-;;;1216:1432;8:9:-1;5:2;;;30:1;27;20:12;5:2;1216:1432:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1536:20:1;;;;1528:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1616:1;1606:11;;;;1598:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1685:1;1671:15;;;;1663:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1762:1;1744:19;;;;1736:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1847:1;1825:23;;;;1817:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1929:1;-1:-1:-1;;;;;1914:16:1;;;1906:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2006:1;-1:-1:-1;;;;;1989:18:1;;;1981:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2083:1;2068:16;;;;2060:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2162:1;-1:-1:-1;;;;;2143:20:1;;;2135:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:5;:18;;2227:10;-1:-1:-1;;;;;;2219:18:1;;;;;;;2247:5;:22;;;;;-1:-1:-1;;;;;2247:22:1;;;;;;;;;;;-1:-1:-1;2279:24:1;;-1:-1:-1;;2279:24:1;;;;;;;;-1:-1:-1;;2313:32:1;;;;;;;;;;;;;-1:-1:-1;;;;;;2355:40:1;;;;;;;;-1:-1:-1;;;;;;2405:48:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;2463:34:1;;-1:-1:-1;;;;;2463:34:1;;;;;-1:-1:-1;;;;;2507:38:1;;;;;;;;;;;;;;;-1:-1:-1;2555:34:1;;;;;;;;;;;;;;-1:-1:-1;2599:42:1;;-1:-1:-1;;;;;;;;2599:42:1;;;;;;;;;;;;;310:2340;;;;;;;;",
  "deployedSourceMap": "310:2340:1:-;;;;;;;;;-1:-1:-1;;;310:2340:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2773:2067:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2773:2067:9;;;;;;;;;;-1:-1:-1;;;;;2773:2067:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8173:3699;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8173:3699:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8173:3699:9;;;;;;;;;;;-1:-1:-1;;;;;8173:3699:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8173:3699:9;;-1:-1:-1;8173:3699:9;;-1:-1:-1;;;;;;;8173:3699:9;7082:97:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7082:97:0;;;;;;;;;;;;;;;;;;;;424:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;424:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;605:115;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;605:115:0;;;;;;;;;;;;;;;;;;;;;;;3842:291;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3842:291:0;;;;;;;;;;;;;;;;;;;;;;;1819:41:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1819:41:3;;;;2909:832:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2909:832:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2909:832:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2909:832:0;;-1:-1:-1;;2909:832:0;;;-1:-1:-1;;;2909:832:0;;;;;;-1:-1:-1;2909:832:0;;-1:-1:-1;2909:832:0;1726:48:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1726:48:3;;;;5237:705:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5237:705:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5237:705:9;;-1:-1:-1;5237:705:9;;-1:-1:-1;;;;;;;5237:705:9;4356:399:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4356:399:0;-1:-1:-1;;;;;4356:399:0;;;;;;;13098:273:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13098:273:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13098:273:9;;-1:-1:-1;13098:273:9;;-1:-1:-1;;;;;;;13098:273:9;15027:259;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;15027:259:9;;;;;;;;;;;;876:154:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;876:154:0;;;;;5244:575;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5244:575:0;-1:-1:-1;;;;;5244:575:0;;;;;;;14467:331:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;14467:331:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14467:331:9;;-1:-1:-1;14467:331:9;;-1:-1:-1;;;;;;;14467:331:9;1376:67;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1376:67:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1376:67:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1376:67:9;;;;;;;;;;;;;;;;;;;;;;;;1640:45:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1640:45:3;;;;1345:25:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1345:25:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;1345:25:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:20:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1613:20:3;;;;;;;;-1:-1:-1;;;;;1613:20:3;;;;;;;;;;;;;;15508:265:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;15508:265:9;;;;;;;;;;;;12454:329;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12454:329:9;;;;;;;;;;;;;;;;;6769:172:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6769:172:0;;;;;;;;;-1:-1:-1;;;;;6769:172:0;;;;;;;;;;;;;;11996:97:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11996:97:9;;;;7320:102:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7320:102:0;;;;16304:1390:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;16304:1390:9;;;;;;;;;;;;1587:20:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1587:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1587:20:3;-1:-1:-1;;;;;1587:20:3;;;;;;-1:-1:-1;;;;;1587:20:3;-1:-1:-1;;;;;1587:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1587:20:3;-1:-1:-1;;;;;1587:20:3;;;;;;-1:-1:-1;;;;;1587:20:3;-1:-1:-1;;;;;1587:20:3;;;;;;-1:-1:-1;;;;;1587:20:3;-1:-1:-1;;;;;1587:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;6249:942:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6249:942:9;;;;;;;1847:647:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1847:647:0;;;;;;;393:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;393:25:0;;;;;;;;;-1:-1:-1;;;;;393:25:0;;;;;-1:-1:-1;;;;;393:25:0;;;;;;;;;;;;;;;;;;;;;;368:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;368:19:0;;;;13784:411:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13784:411:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13784:411:9;;-1:-1:-1;;;13784:411:9;;;;;-1:-1:-1;13784:411:9;;-1:-1:-1;;;13784:411:9;2773:2067;3399:16;;:::i;:::-;3039:8;:15;4272:16;;-1:-1:-1;;;;3031:60:9;;;;;-1:-1:-1;;;;;3031:60:9;;;;;;;;;;;;-1:-1:-1;;;;;3031:60:9;;;;;;;;;;;;;;;3109:22;3124:6;3109:22;;:14;:22::i;:::-;3101:49;;;;;;;-1:-1:-1;;;;;3101:49:9;;;;;;;;;;;;-1:-1:-1;;;;;3101:49:9;;;;;;;;;;;;;;;3177:1;-1:-1:-1;;;;;3168:10:9;;;3160:37;;;;;-1:-1:-1;;;;;3160:37:9;;;;;;;;;;;;-1:-1:-1;;;;;3160:37:9;;;;;;;;;;;;;;;3215:13;;;:29;;-1:-1:-1;3243:1:9;3232:12;;3215:29;3207:59;;;;;;;-1:-1:-1;;;;;3207:59:9;;;;;;;;;;;;-1:-1:-1;;;;;3207:59:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;3336:8:9;;;;:30;;-1:-1:-1;3365:1:9;3348:18;;3336:30;3328:60;;;;;;;-1:-1:-1;;;;;3328:60:9;;;;;;;;;;;;-1:-1:-1;;;;;3328:60:9;;;;;;;;;;;;;;;3501:34;;-1:-1:-1;;;;;3501:34:9;;;;;;;;;;;;;;;3486:60;;3501:9;;:25;;3527:7;;;;3501:34;;;;3527:7;;;;3501:34;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3501:34:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3501:34:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3501:34:9;3537:8;3486:14;:60::i;:::-;3462:84;;:21;;;:84;;;3588:1;-1:-1:-1;3556:90:9;;;;;-1:-1:-1;;;;;3556:90:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3556:90:9;;;;;;;;;;;;;;;3688:6;:18;3664:21;;;;3688:18;-1:-1:-1;;;3688:18:9;;;;;3664:42;;;3656:121;;;;;-1:-1:-1;;;;;3656:121:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3788:24;;;;;;-1:-1:-1;;;;;3822:17:9;;;:8;;;:17;3849:11;;:5;;;:11;3870:16;;;:33;;;3913:10;;;:21;;;3973:8;:15;3944:45;:19;;;:45;;;4021;;4057:8;4021:14;:45::i;:::-;3999:67;;;;:19;;;:67;4132:19;;4103:49;;4118:12;;4132:19;4103:14;:49::i;:::-;-1:-1:-1;;;;;4076:76:9;:24;;;:76;4192:25;;4209:7;;;;4192:25;;;4209:7;;;;4192:25;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4192:25:9;;;4182:36;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;;;;365:33;;4182:36:9;;;;;;;;;;4162:17;;;:56;-1:-1:-1;;;4314:21:9;;;;4291:45;;-1:-1:-1;;;;;4291:45:9;;;;;:14;:45::i;:::-;4272:64;;4358:30;4373:9;-1:-1:-1;;;;;4358:30:9;4384:3;-1:-1:-1;;;;;4358:30:9;:14;:30::i;:::-;4346:42;;4471:29;4482:6;4471:29;;4490:9;4471:10;:29::i;:::-;4596:1;4585:8;:12;4581:75;;;4613:32;4626:8;4636;4613:12;:32::i;:::-;4698:8;27:10:-1;;39:1;23:18;;;45:23;;-1:-1;4698:16:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4698:16:9;;;;;;;;;;-1:-1:-1;;;;;;;;4698:16:9;-1:-1:-1;;;;;;;;4698:16:9;;;;;-1:-1:-1;;;;;;;;4698:16:9;-1:-1:-1;;;4698:16:9;;;;;;;;;;;-1:-1:-1;;;;;;4698:16:9;-1:-1:-1;;;4698:16:9;;;;;;;;;;;-1:-1:-1;;;;;;4698:16:9;-1:-1:-1;;;4698:16:9;;;;;;;;-1:-1:-1;;;;;4698:16:9;-1:-1:-1;;;4698:16:9;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4698:16:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4763:15;;4698:16;;4748:34;;4763:15;4748:14;:34::i;:::-;4730:103;;;4801:1;:21;;;4824:1;:8;;;4730:103;;;;;;;;;;;-1:-1:-1;;;;;4730:103:9;;;;;;;;;;;;;;;;2773:2067;;;;;;;;;;;:::o;8173:3699::-;8743:19;;:::i;:::-;8997:12;10049:22;10483:13;10618:28;11566:17;8497:24;8512:8;8497:24;;:14;:24::i;:::-;8489:53;;;;;;;-1:-1:-1;;;;;8489:53:9;;;;;;;;;;;;-1:-1:-1;;;;;8489:53:9;;;;;;;;;;;;;;;8560:22;8570:11;8560:22;;:9;:22::i;:::-;8552:73;;;;;;;-1:-1:-1;;;;;8552:73:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8552:73:9;;;;;;;;;;;;;;;8706:26;8715:8;8725:6;8706:8;:26::i;:::-;8765:8;:21;;;;;;;;;;;;;;;;;;;;;8743:43;;;;;;;;8765:21;;;;8743:43;-1:-1:-1;;;;;8743:43:9;;;;;-1:-1:-1;;;8743:43:9;;-1:-1:-1;;;;;8743:43:9;;;;;;;;-1:-1:-1;;;8743:43:9;;;;;;;;;-1:-1:-1;8804:15:9;;8796:68;;;;;-1:-1:-1;;;;;8796:68:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8796:68:9;;;;;;;;;;;;;;;8879:23;;;;;;;;8875:459;;9089:4;9096:8;9106:11;9119:4;:27;;;9164:11;9177:14;9193:3;9198:11;9047:176;;;;;;-1:-1:-1;;;;;9047:176:9;-1:-1:-1;;;;;9047:176:9;-1:-1:-1;;;9047:176:9;;;;;;;;;;-1:-1:-1;;;9047:176:9;;;;;;;;;;-1:-1:-1;;;9047:176:9;;;;;;;;;;-1:-1:-1;;;9047:176:9;;;;;;;;;;-1:-1:-1;;;9047:176:9;;;;;;-1:-1:-1;;;;;9047:176:9;-1:-1:-1;;;;;9047:176:9;-1:-1:-1;;;9047:176:9;;;;;;-1:-1:-1;;;;;9047:176:9;-1:-1:-1;;;;;9047:176:9;-1:-1:-1;;;9047:176:9;;;;;;-1:-1:-1;;;;;9047:176:9;-1:-1:-1;;;;;9047:176:9;-1:-1:-1;;;9047:176:9;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;9047:176:9;;;9024:200;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;9024:200:9;;;;;;;;;;;;9290:10;;-1:-1:-1;;;;;9246:40:9;;;;;;;;;;;;;;;;;;;;;;9024:200;;-1:-1:-1;;;;;;9246:54:9;;;;-1:-1:-1;9246:9:9;;-1:-1:-1;9246:23:9;;9024:200;;-1:-1:-1;9246:40:9;;;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9246:40:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9246:40:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9246:40:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9246:40:9;-1:-1:-1;;;;;9246:54:9;;9238:85;;;;;-1:-1:-1;;;;;9238:85:9;;;;;;;;;;;;-1:-1:-1;;;;;9238:85:9;;;;;;;;;;;;;;;9404:1;9390:11;:15;;;:49;;;;-1:-1:-1;9424:8:9;:15;9409:30;;;;;9390:49;9382:120;;;;;;;-1:-1:-1;;;;;9382:120:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9382:120:9;;;;;;;;;;;;;;;9534:4;:27;;;9520:41;;:11;:41;;;9512:106;;;;;;;-1:-1:-1;;;;;9512:106:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9512:106:9;;;;;;;;;;;;;;;9687:12;9636:8;9659:1;9645:11;:15;9636:25;;;;;;;;;;;;;;;;;;;;:48;:25;;;;;:48;;-1:-1:-1;;;;;9636:48:9;:63;9628:132;;;;;-1:-1:-1;;;;;9628:132:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9628:132:9;;;;;;;;;;;;;;;9850:23;;-1:-1:-1;;;;;;;;9850:23:9;;;;;9832:41;;;;;9824:79;;;;;-1:-1:-1;;;;;9824:79:9;;;;;;;;;;;;-1:-1:-1;;;;;9824:79:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;9921:21:9;;;;;;;;9913:87;;;;;-1:-1:-1;;;;;9913:87:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9913:87:9;;;;;;;;;;;;;;;10074:8;:18;10083:8;10074:18;;;;;;;;;;;;;;;:26;10093:6;10074:26;;;;;;;;;;;;;;;10049:51;;10124:8;10110:2;:11;;;:22;;;;;;;;;;;;;;;;;;10159:4;:27;;;10142:2;:14;;;:44;;;;;;;;;;;;;;;;;;10213:11;10196:2;:14;;;:28;;;;;;;;;;;;;;;;;;10246:14;10234:2;:9;;;:26;;;;;-1:-1:-1;;;;;10234:26:9;;;;;-1:-1:-1;;;;;10234:26:9;;;;;;10278:11;10270:2;:5;;;:19;;;;;;;;;;;;;;;;;;10310:9;:24;10335:6;:22;;;;;;;;;;;;10310:48;;;;;-1:-1:-1;;;10310:48:9;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10310:48:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10310:48:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10310:48:9;10299:8;;;:59;;-1:-1:-1;;;;;;;;;10299:59:9;;;-1:-1:-1;;;;;10299:59:9;;;;-1:-1:-1;;;;;;10368:13:9;;;;-1:-1:-1;10499:19:9;-1:-1:-1;;;10499:19:9;;;;-1:-1:-1;1855:5:3;10580:22:9;;;;10576:522;;10649:35;10664:14;-1:-1:-1;;;;;10649:35:9;10680:3;-1:-1:-1;;;;;10649:35:9;:14;:35::i;:::-;10698:34;;-1:-1:-1;;;;;10698:34:9;;;-1:-1:-1;;;10698:34:9;-1:-1:-1;;;;;;;;10698:34:9;;;;;;;;;10618:66;;-1:-1:-1;10755:45:9;;;;;;;;:14;:45::i;:::-;10814:7;;;:20;;-1:-1:-1;;;;;;10814:20:9;;;10746:54;-1:-1:-1;10919:46:9;;;;10943:21;10919:10;:46::i;:::-;10576:522;;;11029:23;;-1:-1:-1;;;;;;;;11029:23:9;-1:-1:-1;;;;;;;;11029:23:9;;;;;;11066:7;;;:21;;-1:-1:-1;;;;;;11066:21:9;-1:-1:-1;;;;;11066:21:9;;;;;10576:522;11189:6;-1:-1:-1;;;;;11159:36:9;:8;11168;11159:18;;;;;;;;;;;;;;;;;;;;;:26;-1:-1:-1;;;11159:26:9;;-1:-1:-1;;;;;11159:26:9;:36;;11151:65;;;;;-1:-1:-1;;;;;11151:65:9;;;;;;;;;;;;-1:-1:-1;;;;;11151:65:9;;;;;;;;;;;;;;;11342:11;11288:8;11297:11;11288:21;;;;;;;;;;;;;;;;;;;;;:66;;-1:-1:-1;;;;;11288:66:9;-1:-1:-1;;;11288:66:9;;;;;;;;11398:28;;;;11419:6;11398:10;:28::i;:::-;-1:-1:-1;;;;;11499:25:9;;;;;;:51;;;1855:5:3;11528:6:9;:22;;;;11499:51;11495:259;;;11586:8;:21;;;;;;;;;;;;;;;;;;;;:29;11629:8;:21;;-1:-1:-1;;;11586:29:9;;;-1:-1:-1;;;;;11586:29:9;;-1:-1:-1;11629:8:9;:21;;;;;;;;;;;;;;;;;;;;;;:33;;-1:-1:-1;;;;;;;;11629:33:9;-1:-1:-1;;;;;;;;11629:33:9;;;;;;;11684:5;;;:39;;;-1:-1:-1;;;;;11684:39:9;;-1:-1:-1;;;;;11684:39:9;;;;;;;;;;;;;;;;;;:5;;;:14;;:39;;;;;11629:21;11684:39;;;;;;;;:5;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;11684:39:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11684:39:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11684:39:9;11676:67;;;;;;;-1:-1:-1;;;;;11676:67:9;;;;;;;;;;;;-1:-1:-1;;;;;11676:67:9;;;;;;;;;;;;;;;11795:11;11769:96;;11787:6;11769:96;;11777:8;11769:96;;;11808:4;:27;;;11837:11;11850:14;11769:96;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11769:96:9;;;;;;;;;;;;;;;;;8173:3699;;;;;;;;;;;;;;:::o;7082:97:0:-;7157:8;:15;7082:97;;:::o;424:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;424:43:0;;;;;-1:-1:-1;;;424:43:0;;;;:::o;605:115::-;697:8;:15;-1:-1:-1;685:27:0;605:115::o;3842:291::-;3908:8;:15;3878:10;;1678:7:3;-1:-1:-1;3900:66:0;;;;;-1:-1:-1;;;;;3900:66:0;;;;;;;;;;;;-1:-1:-1;;;;;3900:66:0;;;;;;;;;;;;;;;-1:-1:-1;3991:8:0;:15;;4031:25;;;;;;;;4039:10;4031:25;;;-1:-1:-1;4031:25:0;;;;;;;;;;;;;39:1:-1;23:18;;45:23;;4017:40:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4017:40:0;;;-1:-1:-1;;;;;4017:40:0;;;;;;;-1:-1:-1;;;;;;;;4017:40:0;-1:-1:-1;;;;;;;;4017:40:0;;;;;;;;;;;-1:-1:-1;;;;;4017:40:0;-1:-1:-1;;;4031:25:0;4017:40;;;;;;;;4072:34;;;;;;;;;;;;;3991:15;;-1:-1:-1;;;;;;;;;;;4072:34:0;;;;;;;;;;3842:291;:::o;1819:41:3:-;1855:5;1819:41;:::o;2909:832:0:-;3043:17;:24;3114:22;;;;;;;;3034:33;;3026:78;;;;;-1:-1:-1;;;;;3026:78:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3139:17;:25;;3157:6;;3139:25;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;3114:67;;;;3200:17;3218:6;3200:25;;;;;;;;;;;;;;;;;;:37;:25;;;;;:37;;3266:17;:25;;3200:37;;;;;-1:-1:-1;3266:17:0;3284:6;;3266:25;;;;;;;;;;;;;;;;:34;;;3247:53;;3325:6;:23;3349:5;3356:42;3369:9;3380:17;3356:12;:42::i;:::-;3325:89;;-1:-1:-1;;;3325:89:0;;;;;;;;;;;;-1:-1:-1;;;;;3400:13:0;;3325:89;;;;;;;;;;;;;;;;;;;;;3400:13;;3325:89;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3325:89:0;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3325:89:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3325:89:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3325:89:0;;-1:-1:-1;3433:30:0;;;;;;:67;;;3499:1;3479:17;:21;3467:9;:33;3433:67;3425:158;;;;;;;-1:-1:-1;;;;;3425:158:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3425:158:0;;;;;;;;;;;;;;;3601:16;;;3593:49;;;;;-1:-1:-1;;;;;3593:49:0;;;;;;;;;;;;-1:-1:-1;;;;;3593:49:0;;;;;;;;;;;;;;;3657:34;;;;;;-1:-1:-1;;;;;3657:34:0;;;;;;;;-1:-1:-1;;;;;;;;;;;3657:34:0;;;;;;;;;;3730:4;3702:8;3711:9;3702:19;;;;;;;;;;;;;;;;;;;:32;;-1:-1:-1;;;;;;3702:32:0;-1:-1:-1;;;;;3702:32:0;;;;;;;;;;-1:-1:-1;;;;;;;;2909:832:0:o;1726:48:3:-;-1:-1:-1;;1726:48:3;:::o;5237:705:9:-;5364:8;:15;5329:4;;;;5353:26;;;;5345:86;;;;;-1:-1:-1;;;;;5345:86:9;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5345:86:9;;;;-1:-1:-1;;;;;5345:86:9;;;;;;;;;;;;;;;5449:28;5459:17;5449:28;;:9;:28::i;:::-;5441:66;;;;;;;-1:-1:-1;;;;;5441:66:9;;;;;;;;;;;;-1:-1:-1;;;;;5441:66:9;;;;;;;;;;;;;;;5540:8;:18;;;;;;;;;;;;;;;;;;;;:41;:18;;;;;:41;;-1:-1:-1;;;;;5540:41:9;5525:12;:56;5517:86;;;;;-1:-1:-1;;;;;5517:86:9;;;;;;;;;;;;-1:-1:-1;;;;;5517:86:9;;;;;;;;;;;;;;;5652:17;5671:3;5635:40;;;;;;;;;;-1:-1:-1;;;5635:40:9;;;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5635:40:9;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5635:40:9;;;5625:51;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5625:51:9;;;;;;;;;;;;;;;;5613:63;;5699:8;5708;5699:18;;;;;;;;;;;;;;;;;;;;:33;:18;;;;;:33;;5694:38;;5686:62;;;;;-1:-1:-1;;;;;5686:62:9;;;;;;;;;;;;-1:-1:-1;;;;;5686:62:9;;;;;;;;;;;;;;;5759:8;:18;;5803:1;;5759:8;:18;;;;;;;;;;;;;;;;;;:33;:18;;;;;:33;:46;5845:8;:18;;5815:53;;;;;;;5845:18;;;;;;;;;;;;;;;;;;;;;;;:22;-1:-1:-1;;;5845:22:9;;-1:-1:-1;;;;;5845:22:9;5815:10;:53::i;:::-;5900:8;5884:30;;;5910:3;5884:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5884:30:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5931:4:9;;5237:705;-1:-1:-1;;;;5237:705:9:o;4356:399:0:-;4475:14;4450:9;1446:25;1461:9;1446:14;:25::i;:::-;1438:79;;;;;;;-1:-1:-1;;;;;1438:79:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1438:79:0;;;;-1:-1:-1;;;;;1438:79:0;;;;;;;;;;;;;;;4492:8;:19;;4501:9;;4492:19;;;;;;;;;;;;;;;:27;-1:-1:-1;;;;;;;;4492:27:0;;;;;;-1:-1:-1;4538:17:0;;;;;4530:48;;;;;-1:-1:-1;;;;;4530:48:0;;;;;;;;;;;;-1:-1:-1;;;;;4530:48:0;;;;;;;;;;;;;;;4605:1;-1:-1:-1;;;;;4596:10:0;;;4588:47;;;;;-1:-1:-1;;;;;4588:47:0;;;;;;;;;;;;-1:-1:-1;;;;;4588:47:0;;;;;;;;;;;;;;;4646:29;4657:9;4668:6;4646:10;:29::i;:::-;4694:5;;;:34;;;-1:-1:-1;;;;;4694:34:0;;4709:10;4694:34;;;;;;;-1:-1:-1;;;;;4694:34:0;;;;;;;-1:-1:-1;;;;;4694:5:0;;;;:14;;:34;;;;;;;;;;;;;;:5;;:34;;;5:2:-1;;;;30:1;27;20:12;5:2;4694:34:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4694:34:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4694:34:0;4686:62;;;;;;;-1:-1:-1;;;;;4686:62:0;;;;;;;;;;;;-1:-1:-1;;;;;4686:62:0;;;;;;;;;;;;;;;4356:399;;;;:::o;13098:273:9:-;13238:8;1386:149:0;;1446:25;1461:9;1446:14;:25::i;:::-;1438:79;;;;;;;-1:-1:-1;;;;;1438:79:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1438:79:0;;;;-1:-1:-1;;;;;1438:79:0;;;;;;;;;;;;;;;13284:18:9;;;;;;;;:8;:18;;;;;;;;:24;;;;;;;;;;;13262:61;;-1:-1:-1;;;;;13262:61:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;;:21;;13284:24;;:18;;13318:4;;13262:61;;;;;;;;;;;;;13284:18;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;13262:61:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13262:61:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;13338:26:9;;;;;;;-1:-1:-1;13338:26:9;;;-1:-1:-1;13338:26:9;;;;;13098:273;;;;:::o;15027:259::-;15137:8;1150:116:0;;1201:20;1211:9;1201;:20::i;:::-;1193:55;;;;;;;-1:-1:-1;;;;;1193:55:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1193:55:0;;;;;;;;;;;;;;;15189:18:9;;;;;;;;:8;:18;;;;;;;;:24;;;;;;;;;;;15161:71;;-1:-1:-1;;;;;15161:71:9;;;;;;;;;;;;;;;15223:8;15161:71;;;;;;:9;;:27;;:71;;;;;15189:18;;15161:71;;;;;:9;:71;;;5:2:-1;;;;30:1;27;20:12;5:2;15161:71:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;15247:32:9;;;;;;;-1:-1:-1;15247:32:9;;;-1:-1:-1;15247:32:9;;;;;15027:259;;;:::o;876:154:0:-;937:4;960:20;970:9;960;:20::i;:::-;:63;;;;-1:-1:-1;998:8:0;:19;;1007:9;;998:19;;;;;;;;;;;;;;;:25;-1:-1:-1;;;;;998:25:0;984:10;:39;960:63;953:70;876:154;-1:-1:-1;;876:154:0:o;5244:575::-;5334:8;:15;5549:10;;5322:27;;;:60;;;-1:-1:-1;;5353:9:0;:29;5322:60;5314:90;;;;;;;-1:-1:-1;;;;;5314:90:0;;;;;;;;;;;;-1:-1:-1;;;;;5314:90:0;;;;;;;;;;;;;;;5431:1;-1:-1:-1;;;;;5422:10:0;;;5414:48;;;;;-1:-1:-1;;;;;5414:48:0;;;;;;;;;;;;-1:-1:-1;;;;;5414:48:0;;;;;;;;;;;;;;;-1:-1:-1;;5477:9:0;:29;5473:248;;;5562:10;:8;:10::i;:::-;5549:23;;;;5612:6;5586:8;5595:5;5586:15;;;;;;;;;;;;;;;;;:23;;;:32;;;;;-1:-1:-1;;;;;5586:32:0;;;;;-1:-1:-1;;;;;5586:32:0;;;;;;5473:248;;;5681:29;5692:9;5703:6;5681:10;:29::i;:::-;5739:5;;;:53;;;-1:-1:-1;;;;;5739:53:0;;5758:10;5739:53;;;;;;;5778:4;5739:53;;;;-1:-1:-1;;;;;5739:53:0;;;;;;;-1:-1:-1;;;;;5739:5:0;;;;:18;;:53;;;;;;;;;;;;;;:5;;:53;;;5:2:-1;;;;30:1;27;20:12;5:2;5739:53:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5739:53:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5739:53:0;5731:81;;;;;;;-1:-1:-1;;;;;5731:81:0;;;;;;;;;;;;-1:-1:-1;;;;;5731:81:0;;;;;;;;;;;;;;;5244:575;;;:::o;14467:331:9:-;14610:8;1386:149:0;;1446:25;1461:9;1446:14;:25::i;:::-;1438:79;;;;;;;-1:-1:-1;;;;;1438:79:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1438:79:0;;;;-1:-1:-1;;;;;1438:79:0;;;;;;;;;;;;;;;14669:18:9;;;;;;;;:8;:18;;;;;;;;:24;;;;;;;;;;;14634:116;;-1:-1:-1;;;;;14634:116:9;;;;;;;;14707:8;14634:116;;;;;;;;;;;;;;;;;;;;;:9;;:21;;14669:24;;14707:8;;14729:7;;14634:116;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14634:116:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14634:116:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;14765:26:9;;;;;;;-1:-1:-1;14765:26:9;;;-1:-1:-1;14765:26:9;;;;;14467:331;;;;:::o;1376:67::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1376:67:9;;;;;-1:-1:-1;;;1376:67:9;;;-1:-1:-1;;;;;1376:67:9;;;;-1:-1:-1;;;1376:67:9;;;;;;-1:-1:-1;;;1376:67:9;;;;;;;;;;;;;;;;-1:-1:-1;;;1376:67:9;;;;;;;;;;;;-1:-1:-1;;;1376:67:9;;;;-1:-1:-1;;;1376:67:9;;;;;-1:-1:-1;;;;;1376:67:9;;;:::o;1640:45:3:-;1678:7;1640:45;:::o;1345:25:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;1345:25:9;;;;;-1:-1:-1;;;1345:25:9;;;;;-1:-1:-1;;;1345:25:9;;;;;-1:-1:-1;;;1345:25:9;;;;;-1:-1:-1;;;1345:25:9;;;;;;;;;;;;;:::o;1613:20:3:-;;;-1:-1:-1;;;;;1613:20:3;;:::o;15508:265:9:-;15626:8;1386:149:0;;1446:25;1461:9;1446:14;:25::i;:::-;1438:79;;;;;;;-1:-1:-1;;;;;1438:79:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1438:79:0;;;;-1:-1:-1;;;;;1438:79:0;;;;;;;;;;;;;;;15677:18:9;;;;;;;;:8;:18;;;;;;;;:24;;;;;;;;;;;15650:70;;-1:-1:-1;;;;;15650:70:9;;;;;;;;;;;;;;;15711:8;15650:70;;;;;;:9;;:26;;:70;;;;;15677:18;;15650:70;;;;;:9;:70;;;5:2:-1;;;;30:1;27;20:12;5:2;15650:70:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;15735:31:9;;;;;;;-1:-1:-1;15735:31:9;;;-1:-1:-1;15735:31:9;;;;;15508:265;;;:::o;12454:329::-;12585:8;1150:116:0;;1201:20;1211:9;1201;:20::i;:::-;1193:55;;;;;;;-1:-1:-1;;;;;1193:55:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1193:55:0;;;;;;;;;;;;;;;12620:10:9;1386:149:0;;1446:25;1461:9;1446:14;:25::i;:::-;1438:79;;;;;;;-1:-1:-1;;;;;1438:79:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1438:79:0;;;;-1:-1:-1;;;;;1438:79:0;;;;;;;;;;;;;;;12668:18:9;;;;;;;;:8;:18;;;;;;;;:24;;;;;;;;;;;12646:77;;-1:-1:-1;;;;;12646:77:9;;;;;;;;;;;;;;;12702:8;12646:77;;;;;;;;;;;;:9;;:21;;:77;;;;;12668:18;;12646:77;;;;;:9;:77;;;5:2:-1;;;;30:1;27;20:12;5:2;12646:77:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12646:77:9;;;;12759:4;12738:38;;12749:8;12738:38;;;12765:10;12738:38;;;;;;;;;;;;;;;;;;;;1258:1:0;12454:329:9;;;;:::o;6769:172:0:-;6878:6;6850:9;1201:20;1211:9;1201;:20::i;:::-;1193:55;;;;;;;-1:-1:-1;;;;;1193:55:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1193:55:0;;;;;;;;;;;;;;;6907:8;:19;;6916:9;;6907:19;;;;;;;;;;;;;;;:27;-1:-1:-1;;;6907:27:0;;-1:-1:-1;;;;;6907:27:0;;6769:172;-1:-1:-1;;;6769:172:0:o;11996:97:9:-;12071:8;:15;11996:97;:::o;7320:102:0:-;7391:17;:24;7320:102;:::o;16304:1390:9:-;16369:20;;:::i;:::-;-1:-1:-1;16392:18:9;;;;17213:14;16392:18;;;:8;:18;;;;;;;;:24;;;;;;;;;;16369:47;;;;;;;;;;;;;;-1:-1:-1;;;16369:47:9;;;;;;;;;;;-1:-1:-1;;;;;;;;16369:47:9;;;;;;;;;;;;-1:-1:-1;;;16369:47:9;;;;;;;;;-1:-1:-1;;;16369:47:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16369:47:9;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16369:47:9;;;;;;;;;;-1:-1:-1;;;16369:47:9;;;;;;;;;;;;;;-1:-1:-1;;;;;16369:47:9;;;;;;;;;;;;;;16493:13;16489:26;;;16508:7;;16489:26;16666:1;:8;;;:13;;16678:1;16666:13;16658:44;;;;;;;-1:-1:-1;;;;;16658:44:9;;;;;;;;;;;;-1:-1:-1;;;;;16658:44:9;;;;;;;;;;;;;;;16736:7;;;;-1:-1:-1;;;;;16720:23:9;:12;:23;;16712:54;;;;;-1:-1:-1;;;;;16712:54:9;;;;;;;;;;;;-1:-1:-1;;;;;16712:54:9;;;;;;;;;;;;;;;16823:18;;;;16857:1;16823:18;;;:8;:18;;;;;;;;:24;;;;;;;;;;;:31;;:35;;-1:-1:-1;;;;;;16823:35:9;;;17078:16;;;;17096:19;;17042:75;;17063:53;;-1:-1:-1;;;;;17063:53:9;;;;-1:-1:-1;;;17096:19:9;;;;17063:14;:53::i;:::-;17042:10;:75::i;:::-;17230:42;17245:1;:8;;;-1:-1:-1;;;;;17230:42:9;17255:1;:16;;;-1:-1:-1;;;;;17230:42:9;:14;:42::i;:::-;17324:6;;;;17213:59;;-1:-1:-1;;;;;;17324:20:9;;17320:368;;17419:47;17434:7;-1:-1:-1;;;;;17419:47:9;17443:8;17452:1;:4;;;17443:14;;;;;;;;;;;;;;;;;;;;;:22;-1:-1:-1;;;17443:22:9;;-1:-1:-1;;;;;17443:22:9;17419:14;:47::i;:::-;17409:57;;17505:1;17480:8;17489:1;:4;;;17480:14;;;;;;;;;;;;;;;;;;;;;:26;;-1:-1:-1;;;;;;;;17480:26:9;-1:-1:-1;;;;;;;;17480:26:9;;;;;;;17524:12;;;17520:93;;17562:5;;;17577:6;;;;17562:31;;;-1:-1:-1;;;;;17562:31:9;;-1:-1:-1;;;;;17562:31:9;;;;;;;;;;-1:-1:-1;;;;;17562:31:9;;;;;;;:5;;;:14;;:31;;;;;;;;;;;;;;:5;;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;17562:31:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17562:31:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17562:31:9;17554:59;;;;;;;-1:-1:-1;;;;;17554:59:9;;;;;;;;;;;;-1:-1:-1;;;;;17554:59:9;;;;;;;;;;;;;;;17320:368;;;17652:25;17663:1;:4;;;17652:25;;17669:7;17652:10;:25::i;1587:20:3:-;;;;;;;;;;;;-1:-1:-1;;;1587:20:3;;;;;;-1:-1:-1;;;1587:20:3;;;;;;-1:-1:-1;;;1587:20:3;;;;;;-1:-1:-1;;;;;;;;1587:20:3;;;;;;-1:-1:-1;;;1587:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1587:20:3;;;;;;;;;;;;;;;;:::o;6249:942:9:-;6313:4;6622:22;;:::i;:::-;6348:8;:15;6754:12;;6337:26;;;;6329:86;;;;;-1:-1:-1;;;;;6329:86:9;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6329:86:9;;;;-1:-1:-1;;;;;6329:86:9;;;;;;;;;;;;;;;6433:8;:18;;;;;;;;;;;;;;;;;;;;:33;:18;;;;;:33;;:38;;6425:78;;;;;-1:-1:-1;;;;;6425:78:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;6537:8;:18;;;;;;;;;;;;;;;;;;;;:41;:18;;;;;:41;;-1:-1:-1;;;;;6537:41:9;6521:12;:57;;6513:99;;;;;-1:-1:-1;;;;;6513:99:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;6647:8;:18;;;;;;;;;;;;;;;;;;;;6622:43;;;;;;;;6647:18;;;;;;;6622:43;;;;;;;;-1:-1:-1;;;;;;;;6622:43:9;;;;;;;;;;;-1:-1:-1;;;6622:43:9;;;;;;;;;;;-1:-1:-1;;;6622:43:9;;;;;;;;-1:-1:-1;;;6622:43:9;;;;;;;;-1:-1:-1;;;6622:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6683:31:9;6675:68;;;;;-1:-1:-1;;;;;6675:68:9;;;;;;;;;;;;-1:-1:-1;;;;;6675:68:9;;;;;;;;;;;;;;;6769:122;6797:59;6812:7;:27;;;6797:59;;6841:7;:14;;;-1:-1:-1;;;;;6797:59:9;:14;:59::i;:::-;-1:-1:-1;;;;;6769:122:9;6870:7;:11;;;-1:-1:-1;;;;;6769:122:9;:14;:122::i;:::-;6932:1;6902:27;;;:31;;;6943:11;;;:15;;;6968:14;;;:18;6996:8;:18;;6754:137;;-1:-1:-1;6902:7:9;;:31;6996:18;;;;;;;;;;;;;;;;;;:28;;:18;;;;;;:28;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6996:28:9;;;;;;;;-1:-1:-1;;;;;;;;6996:28:9;-1:-1:-1;;;;;;;;6996:28:9;;;;;-1:-1:-1;;;;;;;;6996:28:9;-1:-1:-1;;;6996:28:9;;;;;;;;;;;-1:-1:-1;;;;;;6996:28:9;-1:-1:-1;;;6996:28:9;;;;;;;;-1:-1:-1;;;;;;6996:28:9;-1:-1:-1;;;6996:28:9;;;;;;;;-1:-1:-1;;;;;6996:28:9;-1:-1:-1;;;6996:28:9;;;;;;;;;;;;;;;;;-1:-1:-1;6996:28:9;;;;-1:-1:-1;;;;;;6996:28:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7073:21;;7062:40;;;7096:5;7062:10;:40::i;:::-;7133:21;;7117:45;;;;;;;;;-1:-1:-1;;;;;7117:45:9;;;;;;;;;;;;;;;;;;-1:-1:-1;7180:4:9;;6249:942;-1:-1:-1;;;6249:942:9:o;1847:647:0:-;1941:1;1930:12;;1922:48;;;;;-1:-1:-1;;;;;1922:48:0;;;;;;;;;;;;-1:-1:-1;;;;;1922:48:0;;;;;;;;;;;;;;;1999:6;:14;;;1988:25;;1980:87;;;;;-1:-1:-1;;;;;1980:87:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1980:87:0;;;;;;;;;;;;;;;2098:8;:15;1678:7:3;;2085:39:0;;2115:8;2085:12;:39::i;:::-;:57;;2077:101;;;;;-1:-1:-1;;;;;2077:101:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;2207:1;2196:12;;2188:48;;;;;-1:-1:-1;;;;;2188:48:0;;;;;;;;;;;;-1:-1:-1;;;;;2188:48:0;;;;;;;;;;;;;;;2275:8;:15;2292:17;:24;2252:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2350:69;;;;;;;;;;;;;;;;;;;;;2402:8;:15;;2350:69;;;;;;;;2327:17;27:10:-1;;39:1;23:18;;45:23;;-1:-1;2327:93:0;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2327:93:0;;;;;;;;;;-1:-1:-1;;2327:93:0;-1:-1:-1;;;2327:93:0;;;;;;;;;;;2461:15;2448:39;;2350:69;2448:12;:39::i;:::-;2430:57;:8;:57;;:::i;393:25::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;393:25:0;;;-1:-1:-1;;;;393:25:0;;-1:-1:-1;;;;;393:25:0;;-1:-1:-1;;;393:25:0;;;;;:::o;368:19::-;;;-1:-1:-1;;;;;368:19:0;;:::o;13784:411:9:-;13937:8;1150:116:0;;1201:20;1211:9;1201;:20::i;:::-;1193:55;;;;;;;-1:-1:-1;;;;;1193:55:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1193:55:0;;;;;;;;;;;;;;;13984:18:9;;;;;;;;:8;:18;;;;;;;;:24;;;;;;;;;;:35;;;13969:51;;-1:-1:-1;;;13984:35:9;;;;13969:14;:51::i;:::-;13961:100;;;;;;;-1:-1:-1;;;;;13961:100:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13961:100:9;;;;;;;;;;;;;;;14094:18;;;;;;;;:8;:18;;;;;;;;:24;;;;;;;;;;14072:68;;-1:-1:-1;;;;;14072:68:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;;:21;;14094:24;;14128:4;;14134:5;;14072:68;;;;;;;;;;;;;14094:18;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14072:68:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14072:68:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14072:68:9;;;;14176:4;14155:33;;14166:8;14155:33;;;14182:5;14155:33;;;;;;;;;;;;;;;;;;;;13784:411;;;;;:::o;2929:166:10:-;2989:6;3019:5;;;3042:6;;;;;;:19;;;-1:-1:-1;;;3052:1:10;:9;3042:19;3034:28;;;;;;;;3086:1;3072:16;;2929:166;;;;;;:::o;1420:199::-;1480:6;1510:5;;;1533:6;;;;;;:19;;-1:-1:-1;;;;1543:9:10;;1525:28;;;;;304:239;364:6;;386;;382:45;;;415:1;408:8;;;;382:45;-1:-1:-1;448:5:10;;;452:1;448;:5;471;;;;;;;;:10;463:19;;;;;;-1:-1:-1;;;500:9:10;;492:18;;;;;6353:279:0;6454:14;6429:9;1201:20;1211:9;1201;:20::i;:::-;1193:55;;;;;;;-1:-1:-1;;;;;1193:55:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1193:55:0;;;;;;;;;;;;;;;6471:8;:19;;6480:9;;6471:19;;;;;;;;;;;;;;;:27;-1:-1:-1;;;;;;;;6471:27:0;;;;;;-1:-1:-1;6516:17:0;;;;;6508:46;;;;;-1:-1:-1;;;;;6508:46:0;;;;;;;;;;;;-1:-1:-1;;;;;6508:46:0;;;;;;;;;;;;;;;6594:31;6609:7;-1:-1:-1;;;;;6594:31:0;6618:6;-1:-1:-1;;;;;6594:31:0;:14;:31::i;:::-;6564:8;:19;;6573:9;;6564:19;;;;;;;;;;;;;:27;;;:61;;;;;-1:-1:-1;;;;;6564:61:0;;;;;-1:-1:-1;;;;;6564:61:0;;;;;;6353:279;;;;:::o;2560:214:10:-;2620:6;;2646;;;;2638:15;;;;;;-1:-1:-1;2675:5:10;;;-1:-1:-1;;;2698:9:10;;2690:18;;;;;1051:214;1111:6;;1137;;;;1129:15;;;;;;-1:-1:-1;1166:5:10;;;-1:-1:-1;;;1189:9:10;;1181:18;;;;;5988:189:0;6064:9;1201:20;1211:9;1201;:20::i;:::-;1193:55;;;;;;;-1:-1:-1;;;;;1193:55:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1193:55:0;;;;;;;;;;;;;;;6119:51;6134:8;6143:9;6134:19;;;;;;;;;;;;;;;;;;;:27;-1:-1:-1;;;;;;;;6134:27:0;;;;;;6119:51;;:14;:51::i;:::-;6089:8;:19;;6098:9;;6089:19;;;;;;;;;;;;;:27;;;:81;;;;;-1:-1:-1;;;;;6089:81:0;;;;;-1:-1:-1;;;;;6089:81:0;;;;;;5988:189;;;:::o;3968:121:10:-;4026:7;4053:6;;;;4045:15;;;;;;-1:-1:-1;4077:5:10;;;3968:121::o;4246:144::-;4304:7;4335:5;;;4358:6;;;;4350:15;;;;;310:2340:1;;;;;;;;;-1:-1:-1;310:2340:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;310:2340:1;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;310:2340:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity 0.4.25;\n\n\nimport \"./IERC20.sol\";\nimport \"./Accounts.sol\";\nimport \"./Payments.sol\";\nimport \"./SafeMath.sol\";\n\n\n/**\n * @title BatchPayment processing\n * @notice This contract allows to scale ERC-20 token transfer for fees or\n *         micropayments on the few-buyers / many-sellers setting.\n */\ncontract BatPay is Payments {\n\n    /**\n     * @dev Contract constructor, sets ERC20 token this contract will use for payments\n     * @param token_ ERC20 contract address\n     * @param maxBulk Maximum number of users to register in a single bulkRegister\n     * @param maxTransfer Maximum number of destinations on a single payment\n     * @param challengeBlocks number of blocks to wait for a challenge\n     * @param challengeStepBlocks number of blocks to wait for a single step on\n     *        the challenge game\n     * @param collectStake stake in tokens for a collect operation\n     * @param challengeStake stake in tokens for the challenger of a collect operation\n     * @param unlockBlocks number of blocks to wait after registering payment\n     *        for an unlock operation\n     * @param maxCollectAmount Maximum amount of tokens to be collected in a\n     *        single transaction\n     */\n    constructor(\n        IERC20 token_,\n        uint32 maxBulk,\n        uint32 maxTransfer,\n        uint32 challengeBlocks,\n        uint32 challengeStepBlocks,\n        uint64 collectStake,\n        uint64 challengeStake,\n        uint32 unlockBlocks,\n        uint64 maxCollectAmount\n    )\n        public\n    {\n        require(token_ != address(0), \"Token address can't be zero\");\n        require(maxBulk > 0, \"Parameter maxBulk can't be zero\");\n        require(maxTransfer > 0, \"Parameter maxTransfer can't be zero\");\n        require(challengeBlocks > 0, \"Parameter challengeBlocks can't be zero\");\n        require(challengeStepBlocks > 0, \"Parameter challengeStepBlocks can't be zero\");\n        require(collectStake > 0, \"Parameter collectStake can't be zero\");\n        require(challengeStake > 0, \"Parameter challengeStake can't be zero\");\n        require(unlockBlocks > 0, \"Parameter unlockBlocks can't be zero\");\n        require(maxCollectAmount > 0, \"Parameter maxCollectAmount can't be zero\");\n\n        owner = msg.sender;\n        token = IERC20(token_);\n        params.maxBulk = maxBulk;\n        params.maxTransfer = maxTransfer;\n        params.challengeBlocks = challengeBlocks;\n        params.challengeStepBlocks = challengeStepBlocks;\n        params.collectStake = collectStake;\n        params.challengeStake = challengeStake;\n        params.unlockBlocks = unlockBlocks;\n        params.maxCollectAmount = maxCollectAmount;\n    }\n}\n",
  "sourcePath": "/Users/agustinmodugno/code/BatchPayments/contracts/BatPay.sol",
  "ast": {
    "absolutePath": "/Users/agustinmodugno/code/BatchPayments/contracts/BatPay.sol",
    "exportedSymbols": {
      "BatPay": [
        656
      ]
    },
    "id": 657,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 503,
        "literals": [
          "solidity",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/agustinmodugno/code/BatchPayments/contracts/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 504,
        "nodeType": "ImportDirective",
        "scope": 657,
        "sourceUnit": 1642,
        "src": "26:22:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/agustinmodugno/code/BatchPayments/contracts/Accounts.sol",
        "file": "./Accounts.sol",
        "id": 505,
        "nodeType": "ImportDirective",
        "scope": 657,
        "sourceUnit": 502,
        "src": "49:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/agustinmodugno/code/BatchPayments/contracts/Payments.sol",
        "file": "./Payments.sol",
        "id": 506,
        "nodeType": "ImportDirective",
        "scope": 657,
        "sourceUnit": 4707,
        "src": "74:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/agustinmodugno/code/BatchPayments/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 507,
        "nodeType": "ImportDirective",
        "scope": 657,
        "sourceUnit": 5079,
        "src": "99:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 508,
              "name": "Payments",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4706,
              "src": "329:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Payments_$4706",
                "typeString": "contract Payments"
              }
            },
            "id": 509,
            "nodeType": "InheritanceSpecifier",
            "src": "329:8:1"
          }
        ],
        "contractDependencies": [
          501,
          1572,
          4706
        ],
        "contractKind": "contract",
        "documentation": "@title BatchPayment processing\n@notice This contract allows to scale ERC-20 token transfer for fees or\n        micropayments on the few-buyers / many-sellers setting.",
        "fullyImplemented": true,
        "id": 656,
        "linearizedBaseContracts": [
          656,
          4706,
          501,
          1572
        ],
        "name": "BatPay",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "1518:1130:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 531,
                          "name": "token_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 511,
                          "src": "1536:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1641",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1554:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1546:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1546:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1536:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e20616464726573732063616e2774206265207a65726f",
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1558:29:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_61d148a436f4365a325a55a21174cf491b7f2d2011b88a75c3b34eecfe90e8bf",
                          "typeString": "literal_string \"Token address can't be zero\""
                        },
                        "value": "Token address can't be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_61d148a436f4365a325a55a21174cf491b7f2d2011b88a75c3b34eecfe90e8bf",
                          "typeString": "literal_string \"Token address can't be zero\""
                        }
                      ],
                      "id": 530,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5729,
                        5730
                      ],
                      "referencedDeclaration": 5730,
                      "src": "1528:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1528:60:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 538,
                  "nodeType": "ExpressionStatement",
                  "src": "1528:60:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 540,
                          "name": "maxBulk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 513,
                          "src": "1606:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1616:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1606:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506172616d65746572206d617842756c6b2063616e2774206265207a65726f",
                        "id": 543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1619:33:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42ce9f39737468c5c38eb40f9f4d0b2527e1a6db2b621f0a3e24a1517184f49b",
                          "typeString": "literal_string \"Parameter maxBulk can't be zero\""
                        },
                        "value": "Parameter maxBulk can't be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_42ce9f39737468c5c38eb40f9f4d0b2527e1a6db2b621f0a3e24a1517184f49b",
                          "typeString": "literal_string \"Parameter maxBulk can't be zero\""
                        }
                      ],
                      "id": 539,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5729,
                        5730
                      ],
                      "referencedDeclaration": 5730,
                      "src": "1598:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1598:55:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 545,
                  "nodeType": "ExpressionStatement",
                  "src": "1598:55:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 547,
                          "name": "maxTransfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 515,
                          "src": "1671:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1685:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1671:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506172616d65746572206d61785472616e736665722063616e2774206265207a65726f",
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1688:37:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf77a0e4bb9b931c13f6b4931253a822dce31f60b9328779fb4bd1bb995aea7b",
                          "typeString": "literal_string \"Parameter maxTransfer can't be zero\""
                        },
                        "value": "Parameter maxTransfer can't be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cf77a0e4bb9b931c13f6b4931253a822dce31f60b9328779fb4bd1bb995aea7b",
                          "typeString": "literal_string \"Parameter maxTransfer can't be zero\""
                        }
                      ],
                      "id": 546,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5729,
                        5730
                      ],
                      "referencedDeclaration": 5730,
                      "src": "1663:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1663:63:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 552,
                  "nodeType": "ExpressionStatement",
                  "src": "1663:63:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 554,
                          "name": "challengeBlocks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 517,
                          "src": "1744:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1762:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1744:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506172616d65746572206368616c6c656e6765426c6f636b732063616e2774206265207a65726f",
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1765:41:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8545a3eee29baebd438420f707c962a310ab92ca1340701327bd7504168e9122",
                          "typeString": "literal_string \"Parameter challengeBlocks can't be zero\""
                        },
                        "value": "Parameter challengeBlocks can't be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8545a3eee29baebd438420f707c962a310ab92ca1340701327bd7504168e9122",
                          "typeString": "literal_string \"Parameter challengeBlocks can't be zero\""
                        }
                      ],
                      "id": 553,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5729,
                        5730
                      ],
                      "referencedDeclaration": 5730,
                      "src": "1736:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1736:71:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 559,
                  "nodeType": "ExpressionStatement",
                  "src": "1736:71:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 561,
                          "name": "challengeStepBlocks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 519,
                          "src": "1825:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1847:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1825:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506172616d65746572206368616c6c656e676553746570426c6f636b732063616e2774206265207a65726f",
                        "id": 564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1850:45:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a672f705e700ee78bbb804c98106aa3ecd262855bde6dc7bf47041f1c9791513",
                          "typeString": "literal_string \"Parameter challengeStepBlocks can't be zero\""
                        },
                        "value": "Parameter challengeStepBlocks can't be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a672f705e700ee78bbb804c98106aa3ecd262855bde6dc7bf47041f1c9791513",
                          "typeString": "literal_string \"Parameter challengeStepBlocks can't be zero\""
                        }
                      ],
                      "id": 560,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5729,
                        5730
                      ],
                      "referencedDeclaration": 5730,
                      "src": "1817:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1817:79:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 566,
                  "nodeType": "ExpressionStatement",
                  "src": "1817:79:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 568,
                          "name": "collectStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 521,
                          "src": "1914:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1929:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1914:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506172616d6574657220636f6c6c6563745374616b652063616e2774206265207a65726f",
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1932:38:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e6c776b2b785445542a07d6c8d201783444a0003b5599d388d853e7e3d6e148",
                          "typeString": "literal_string \"Parameter collectStake can't be zero\""
                        },
                        "value": "Parameter collectStake can't be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e6c776b2b785445542a07d6c8d201783444a0003b5599d388d853e7e3d6e148",
                          "typeString": "literal_string \"Parameter collectStake can't be zero\""
                        }
                      ],
                      "id": 567,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5729,
                        5730
                      ],
                      "referencedDeclaration": 5730,
                      "src": "1906:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1906:65:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 573,
                  "nodeType": "ExpressionStatement",
                  "src": "1906:65:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 575,
                          "name": "challengeStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 523,
                          "src": "1989:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2006:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1989:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506172616d65746572206368616c6c656e67655374616b652063616e2774206265207a65726f",
                        "id": 578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2009:40:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c760d3e9d8bf3d4ade6d06138981db50a95f1f23f6b3530434673b1e4748f4b9",
                          "typeString": "literal_string \"Parameter challengeStake can't be zero\""
                        },
                        "value": "Parameter challengeStake can't be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c760d3e9d8bf3d4ade6d06138981db50a95f1f23f6b3530434673b1e4748f4b9",
                          "typeString": "literal_string \"Parameter challengeStake can't be zero\""
                        }
                      ],
                      "id": 574,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5729,
                        5730
                      ],
                      "referencedDeclaration": 5730,
                      "src": "1981:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1981:69:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 580,
                  "nodeType": "ExpressionStatement",
                  "src": "1981:69:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 582,
                          "name": "unlockBlocks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 525,
                          "src": "2068:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2083:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2068:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506172616d6574657220756e6c6f636b426c6f636b732063616e2774206265207a65726f",
                        "id": 585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2086:38:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_053fecbc3ec54e68442c22b810929a080d4d6311222b34aa8c30875b6bc9b8d7",
                          "typeString": "literal_string \"Parameter unlockBlocks can't be zero\""
                        },
                        "value": "Parameter unlockBlocks can't be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_053fecbc3ec54e68442c22b810929a080d4d6311222b34aa8c30875b6bc9b8d7",
                          "typeString": "literal_string \"Parameter unlockBlocks can't be zero\""
                        }
                      ],
                      "id": 581,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5729,
                        5730
                      ],
                      "referencedDeclaration": 5730,
                      "src": "2060:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2060:65:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 587,
                  "nodeType": "ExpressionStatement",
                  "src": "2060:65:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 589,
                          "name": "maxCollectAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 527,
                          "src": "2143:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2162:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2143:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506172616d65746572206d6178436f6c6c656374416d6f756e742063616e2774206265207a65726f",
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2165:42:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20bb51287bef5e046b58eaefb2cf1b71576f53930d6a590d4e665a9d2cb2c937",
                          "typeString": "literal_string \"Parameter maxCollectAmount can't be zero\""
                        },
                        "value": "Parameter maxCollectAmount can't be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20bb51287bef5e046b58eaefb2cf1b71576f53930d6a590d4e665a9d2cb2c937",
                          "typeString": "literal_string \"Parameter maxCollectAmount can't be zero\""
                        }
                      ],
                      "id": 588,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5729,
                        5730
                      ],
                      "referencedDeclaration": 5730,
                      "src": "2135:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2135:73:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 594,
                  "nodeType": "ExpressionStatement",
                  "src": "2135:73:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 595,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1554,
                      "src": "2219:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 596,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5726,
                        "src": "2227:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2227:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2219:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 599,
                  "nodeType": "ExpressionStatement",
                  "src": "2219:18:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 600,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "2247:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1641",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 602,
                          "name": "token_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 511,
                          "src": "2262:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1641",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1641",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 601,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1641,
                        "src": "2255:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1641_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2255:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1641",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2247:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1641",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 605,
                  "nodeType": "ExpressionStatement",
                  "src": "2247:22:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 606,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1552,
                        "src": "2279:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1550_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 608,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxBulk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1523,
                      "src": "2279:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 609,
                      "name": "maxBulk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 513,
                      "src": "2296:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2279:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "2279:24:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 612,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1552,
                        "src": "2313:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1550_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 614,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1525,
                      "src": "2313:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 615,
                      "name": "maxTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 515,
                      "src": "2334:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2313:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 617,
                  "nodeType": "ExpressionStatement",
                  "src": "2313:32:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 618,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1552,
                        "src": "2355:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1550_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 620,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "challengeBlocks",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1527,
                      "src": "2355:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 621,
                      "name": "challengeBlocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 517,
                      "src": "2380:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2355:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 623,
                  "nodeType": "ExpressionStatement",
                  "src": "2355:40:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 624,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1552,
                        "src": "2405:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1550_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 626,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "challengeStepBlocks",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1529,
                      "src": "2405:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 627,
                      "name": "challengeStepBlocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 519,
                      "src": "2434:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2405:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 629,
                  "nodeType": "ExpressionStatement",
                  "src": "2405:48:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 630,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1552,
                        "src": "2463:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1550_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 632,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collectStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1531,
                      "src": "2463:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 633,
                      "name": "collectStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "2485:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2463:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 635,
                  "nodeType": "ExpressionStatement",
                  "src": "2463:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 636,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1552,
                        "src": "2507:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1550_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 638,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "challengeStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1533,
                      "src": "2507:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 639,
                      "name": "challengeStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 523,
                      "src": "2531:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2507:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 641,
                  "nodeType": "ExpressionStatement",
                  "src": "2507:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 642,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1552,
                        "src": "2555:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1550_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 644,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "unlockBlocks",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1535,
                      "src": "2555:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 645,
                      "name": "unlockBlocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 525,
                      "src": "2577:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2555:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 647,
                  "nodeType": "ExpressionStatement",
                  "src": "2555:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 648,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1552,
                        "src": "2599:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1550_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 650,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxCollectAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1549,
                      "src": "2599:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 651,
                      "name": "maxCollectAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 527,
                      "src": "2625:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2599:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 653,
                  "nodeType": "ExpressionStatement",
                  "src": "2599:42:1"
                }
              ]
            },
            "documentation": "@dev Contract constructor, sets ERC20 token this contract will use for payments\n@param token_ ERC20 contract address\n@param maxBulk Maximum number of users to register in a single bulkRegister\n@param maxTransfer Maximum number of destinations on a single payment\n@param challengeBlocks number of blocks to wait for a challenge\n@param challengeStepBlocks number of blocks to wait for a single step on\n       the challenge game\n@param collectStake stake in tokens for a collect operation\n@param challengeStake stake in tokens for the challenger of a collect operation\n@param unlockBlocks number of blocks to wait after registering payment\n       for an unlock operation\n@param maxCollectAmount Maximum amount of tokens to be collected in a\n       single transaction",
            "id": 655,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 511,
                  "name": "token_",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "1237:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1641",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 510,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1641,
                    "src": "1237:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1641",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 513,
                  "name": "maxBulk",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "1260:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 512,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1260:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 515,
                  "name": "maxTransfer",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "1284:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 514,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1284:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 517,
                  "name": "challengeBlocks",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "1312:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1312:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 519,
                  "name": "challengeStepBlocks",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "1344:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1344:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 521,
                  "name": "collectStake",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "1380:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1380:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 523,
                  "name": "challengeStake",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "1409:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 522,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 525,
                  "name": "unlockBlocks",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "1440:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 524,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1440:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 527,
                  "name": "maxCollectAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "1469:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1469:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1227:271:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1518:0:1"
            },
            "scope": 656,
            "src": "1216:1432:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 657,
        "src": "310:2340:1"
      }
    ],
    "src": "0:2651:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/agustinmodugno/code/BatchPayments/contracts/BatPay.sol",
    "exportedSymbols": {
      "BatPay": [
        656
      ]
    },
    "id": 657,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 503,
        "literals": [
          "solidity",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/agustinmodugno/code/BatchPayments/contracts/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 504,
        "nodeType": "ImportDirective",
        "scope": 657,
        "sourceUnit": 1642,
        "src": "26:22:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/agustinmodugno/code/BatchPayments/contracts/Accounts.sol",
        "file": "./Accounts.sol",
        "id": 505,
        "nodeType": "ImportDirective",
        "scope": 657,
        "sourceUnit": 502,
        "src": "49:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/agustinmodugno/code/BatchPayments/contracts/Payments.sol",
        "file": "./Payments.sol",
        "id": 506,
        "nodeType": "ImportDirective",
        "scope": 657,
        "sourceUnit": 4707,
        "src": "74:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/agustinmodugno/code/BatchPayments/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 507,
        "nodeType": "ImportDirective",
        "scope": 657,
        "sourceUnit": 5079,
        "src": "99:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 508,
              "name": "Payments",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4706,
              "src": "329:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Payments_$4706",
                "typeString": "contract Payments"
              }
            },
            "id": 509,
            "nodeType": "InheritanceSpecifier",
            "src": "329:8:1"
          }
        ],
        "contractDependencies": [
          501,
          1572,
          4706
        ],
        "contractKind": "contract",
        "documentation": "@title BatchPayment processing\n@notice This contract allows to scale ERC-20 token transfer for fees or\n        micropayments on the few-buyers / many-sellers setting.",
        "fullyImplemented": true,
        "id": 656,
        "linearizedBaseContracts": [
          656,
          4706,
          501,
          1572
        ],
        "name": "BatPay",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "1518:1130:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 531,
                          "name": "token_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 511,
                          "src": "1536:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1641",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1554:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1546:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1546:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1536:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e20616464726573732063616e2774206265207a65726f",
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1558:29:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_61d148a436f4365a325a55a21174cf491b7f2d2011b88a75c3b34eecfe90e8bf",
                          "typeString": "literal_string \"Token address can't be zero\""
                        },
                        "value": "Token address can't be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_61d148a436f4365a325a55a21174cf491b7f2d2011b88a75c3b34eecfe90e8bf",
                          "typeString": "literal_string \"Token address can't be zero\""
                        }
                      ],
                      "id": 530,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5729,
                        5730
                      ],
                      "referencedDeclaration": 5730,
                      "src": "1528:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1528:60:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 538,
                  "nodeType": "ExpressionStatement",
                  "src": "1528:60:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 540,
                          "name": "maxBulk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 513,
                          "src": "1606:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1616:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1606:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506172616d65746572206d617842756c6b2063616e2774206265207a65726f",
                        "id": 543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1619:33:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42ce9f39737468c5c38eb40f9f4d0b2527e1a6db2b621f0a3e24a1517184f49b",
                          "typeString": "literal_string \"Parameter maxBulk can't be zero\""
                        },
                        "value": "Parameter maxBulk can't be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_42ce9f39737468c5c38eb40f9f4d0b2527e1a6db2b621f0a3e24a1517184f49b",
                          "typeString": "literal_string \"Parameter maxBulk can't be zero\""
                        }
                      ],
                      "id": 539,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5729,
                        5730
                      ],
                      "referencedDeclaration": 5730,
                      "src": "1598:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1598:55:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 545,
                  "nodeType": "ExpressionStatement",
                  "src": "1598:55:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 547,
                          "name": "maxTransfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 515,
                          "src": "1671:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1685:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1671:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506172616d65746572206d61785472616e736665722063616e2774206265207a65726f",
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1688:37:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf77a0e4bb9b931c13f6b4931253a822dce31f60b9328779fb4bd1bb995aea7b",
                          "typeString": "literal_string \"Parameter maxTransfer can't be zero\""
                        },
                        "value": "Parameter maxTransfer can't be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cf77a0e4bb9b931c13f6b4931253a822dce31f60b9328779fb4bd1bb995aea7b",
                          "typeString": "literal_string \"Parameter maxTransfer can't be zero\""
                        }
                      ],
                      "id": 546,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5729,
                        5730
                      ],
                      "referencedDeclaration": 5730,
                      "src": "1663:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1663:63:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 552,
                  "nodeType": "ExpressionStatement",
                  "src": "1663:63:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 554,
                          "name": "challengeBlocks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 517,
                          "src": "1744:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1762:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1744:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506172616d65746572206368616c6c656e6765426c6f636b732063616e2774206265207a65726f",
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1765:41:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8545a3eee29baebd438420f707c962a310ab92ca1340701327bd7504168e9122",
                          "typeString": "literal_string \"Parameter challengeBlocks can't be zero\""
                        },
                        "value": "Parameter challengeBlocks can't be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8545a3eee29baebd438420f707c962a310ab92ca1340701327bd7504168e9122",
                          "typeString": "literal_string \"Parameter challengeBlocks can't be zero\""
                        }
                      ],
                      "id": 553,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5729,
                        5730
                      ],
                      "referencedDeclaration": 5730,
                      "src": "1736:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1736:71:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 559,
                  "nodeType": "ExpressionStatement",
                  "src": "1736:71:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 561,
                          "name": "challengeStepBlocks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 519,
                          "src": "1825:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1847:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1825:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506172616d65746572206368616c6c656e676553746570426c6f636b732063616e2774206265207a65726f",
                        "id": 564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1850:45:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a672f705e700ee78bbb804c98106aa3ecd262855bde6dc7bf47041f1c9791513",
                          "typeString": "literal_string \"Parameter challengeStepBlocks can't be zero\""
                        },
                        "value": "Parameter challengeStepBlocks can't be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a672f705e700ee78bbb804c98106aa3ecd262855bde6dc7bf47041f1c9791513",
                          "typeString": "literal_string \"Parameter challengeStepBlocks can't be zero\""
                        }
                      ],
                      "id": 560,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5729,
                        5730
                      ],
                      "referencedDeclaration": 5730,
                      "src": "1817:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1817:79:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 566,
                  "nodeType": "ExpressionStatement",
                  "src": "1817:79:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 568,
                          "name": "collectStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 521,
                          "src": "1914:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1929:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1914:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506172616d6574657220636f6c6c6563745374616b652063616e2774206265207a65726f",
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1932:38:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e6c776b2b785445542a07d6c8d201783444a0003b5599d388d853e7e3d6e148",
                          "typeString": "literal_string \"Parameter collectStake can't be zero\""
                        },
                        "value": "Parameter collectStake can't be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e6c776b2b785445542a07d6c8d201783444a0003b5599d388d853e7e3d6e148",
                          "typeString": "literal_string \"Parameter collectStake can't be zero\""
                        }
                      ],
                      "id": 567,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5729,
                        5730
                      ],
                      "referencedDeclaration": 5730,
                      "src": "1906:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1906:65:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 573,
                  "nodeType": "ExpressionStatement",
                  "src": "1906:65:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 575,
                          "name": "challengeStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 523,
                          "src": "1989:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2006:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1989:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506172616d65746572206368616c6c656e67655374616b652063616e2774206265207a65726f",
                        "id": 578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2009:40:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c760d3e9d8bf3d4ade6d06138981db50a95f1f23f6b3530434673b1e4748f4b9",
                          "typeString": "literal_string \"Parameter challengeStake can't be zero\""
                        },
                        "value": "Parameter challengeStake can't be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c760d3e9d8bf3d4ade6d06138981db50a95f1f23f6b3530434673b1e4748f4b9",
                          "typeString": "literal_string \"Parameter challengeStake can't be zero\""
                        }
                      ],
                      "id": 574,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5729,
                        5730
                      ],
                      "referencedDeclaration": 5730,
                      "src": "1981:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1981:69:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 580,
                  "nodeType": "ExpressionStatement",
                  "src": "1981:69:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 582,
                          "name": "unlockBlocks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 525,
                          "src": "2068:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2083:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2068:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506172616d6574657220756e6c6f636b426c6f636b732063616e2774206265207a65726f",
                        "id": 585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2086:38:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_053fecbc3ec54e68442c22b810929a080d4d6311222b34aa8c30875b6bc9b8d7",
                          "typeString": "literal_string \"Parameter unlockBlocks can't be zero\""
                        },
                        "value": "Parameter unlockBlocks can't be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_053fecbc3ec54e68442c22b810929a080d4d6311222b34aa8c30875b6bc9b8d7",
                          "typeString": "literal_string \"Parameter unlockBlocks can't be zero\""
                        }
                      ],
                      "id": 581,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5729,
                        5730
                      ],
                      "referencedDeclaration": 5730,
                      "src": "2060:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2060:65:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 587,
                  "nodeType": "ExpressionStatement",
                  "src": "2060:65:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 589,
                          "name": "maxCollectAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 527,
                          "src": "2143:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2162:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2143:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506172616d65746572206d6178436f6c6c656374416d6f756e742063616e2774206265207a65726f",
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2165:42:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20bb51287bef5e046b58eaefb2cf1b71576f53930d6a590d4e665a9d2cb2c937",
                          "typeString": "literal_string \"Parameter maxCollectAmount can't be zero\""
                        },
                        "value": "Parameter maxCollectAmount can't be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20bb51287bef5e046b58eaefb2cf1b71576f53930d6a590d4e665a9d2cb2c937",
                          "typeString": "literal_string \"Parameter maxCollectAmount can't be zero\""
                        }
                      ],
                      "id": 588,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5729,
                        5730
                      ],
                      "referencedDeclaration": 5730,
                      "src": "2135:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2135:73:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 594,
                  "nodeType": "ExpressionStatement",
                  "src": "2135:73:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 595,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1554,
                      "src": "2219:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 596,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5726,
                        "src": "2227:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2227:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2219:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 599,
                  "nodeType": "ExpressionStatement",
                  "src": "2219:18:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 600,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "2247:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1641",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 602,
                          "name": "token_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 511,
                          "src": "2262:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1641",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1641",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 601,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1641,
                        "src": "2255:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1641_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2255:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1641",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2247:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1641",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 605,
                  "nodeType": "ExpressionStatement",
                  "src": "2247:22:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 606,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1552,
                        "src": "2279:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1550_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 608,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxBulk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1523,
                      "src": "2279:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 609,
                      "name": "maxBulk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 513,
                      "src": "2296:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2279:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "2279:24:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 612,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1552,
                        "src": "2313:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1550_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 614,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1525,
                      "src": "2313:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 615,
                      "name": "maxTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 515,
                      "src": "2334:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2313:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 617,
                  "nodeType": "ExpressionStatement",
                  "src": "2313:32:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 618,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1552,
                        "src": "2355:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1550_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 620,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "challengeBlocks",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1527,
                      "src": "2355:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 621,
                      "name": "challengeBlocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 517,
                      "src": "2380:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2355:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 623,
                  "nodeType": "ExpressionStatement",
                  "src": "2355:40:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 624,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1552,
                        "src": "2405:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1550_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 626,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "challengeStepBlocks",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1529,
                      "src": "2405:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 627,
                      "name": "challengeStepBlocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 519,
                      "src": "2434:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2405:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 629,
                  "nodeType": "ExpressionStatement",
                  "src": "2405:48:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 630,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1552,
                        "src": "2463:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1550_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 632,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collectStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1531,
                      "src": "2463:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 633,
                      "name": "collectStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "2485:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2463:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 635,
                  "nodeType": "ExpressionStatement",
                  "src": "2463:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 636,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1552,
                        "src": "2507:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1550_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 638,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "challengeStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1533,
                      "src": "2507:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 639,
                      "name": "challengeStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 523,
                      "src": "2531:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2507:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 641,
                  "nodeType": "ExpressionStatement",
                  "src": "2507:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 642,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1552,
                        "src": "2555:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1550_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 644,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "unlockBlocks",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1535,
                      "src": "2555:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 645,
                      "name": "unlockBlocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 525,
                      "src": "2577:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2555:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 647,
                  "nodeType": "ExpressionStatement",
                  "src": "2555:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 648,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1552,
                        "src": "2599:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1550_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 650,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxCollectAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1549,
                      "src": "2599:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 651,
                      "name": "maxCollectAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 527,
                      "src": "2625:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2599:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 653,
                  "nodeType": "ExpressionStatement",
                  "src": "2599:42:1"
                }
              ]
            },
            "documentation": "@dev Contract constructor, sets ERC20 token this contract will use for payments\n@param token_ ERC20 contract address\n@param maxBulk Maximum number of users to register in a single bulkRegister\n@param maxTransfer Maximum number of destinations on a single payment\n@param challengeBlocks number of blocks to wait for a challenge\n@param challengeStepBlocks number of blocks to wait for a single step on\n       the challenge game\n@param collectStake stake in tokens for a collect operation\n@param challengeStake stake in tokens for the challenger of a collect operation\n@param unlockBlocks number of blocks to wait after registering payment\n       for an unlock operation\n@param maxCollectAmount Maximum amount of tokens to be collected in a\n       single transaction",
            "id": 655,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 511,
                  "name": "token_",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "1237:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1641",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 510,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1641,
                    "src": "1237:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1641",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 513,
                  "name": "maxBulk",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "1260:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 512,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1260:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 515,
                  "name": "maxTransfer",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "1284:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 514,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1284:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 517,
                  "name": "challengeBlocks",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "1312:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1312:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 519,
                  "name": "challengeStepBlocks",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "1344:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1344:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 521,
                  "name": "collectStake",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "1380:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1380:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 523,
                  "name": "challengeStake",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "1409:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 522,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 525,
                  "name": "unlockBlocks",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "1440:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 524,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1440:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 527,
                  "name": "maxCollectAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "1469:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1469:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1227:271:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1518:0:1"
            },
            "scope": 656,
            "src": "1216:1432:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 657,
        "src": "310:2340:1"
      }
    ],
    "src": "0:2651:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {
        "Merkle": "0x2c83b785229a19b689ef6ddda864beed7b624bc7",
        "Challenge": "0x9f0bab035fef3f2109ebde59ea765ec33e8f3d8e"
      },
      "address": "0x13970a28a36e2c7dd2653ae3f4ce3f95935b91e4",
      "transactionHash": "0xa11c9edb2b610414aad2a60b45282ec2a89f0e75eea95c8263ade67cd57601c5"
    }
  },
  "schemaVersion": "2.0.2",
  "updatedAt": "2019-05-20T14:46:52.230Z"
}